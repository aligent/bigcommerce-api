/**
 * This file was auto-generated by openapi-typescript and ts-morph.
 * Do not make direct changes to the file.
 */

export interface paths {
    readonly "/payments/access_tokens": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Create Payment Access Token
         * @description Use this endpoint to create a payment access token. A payment access token is required to process payments with the BigCommerce API.
         *
         *     You can also generate a payment access token during checkout by using the `completeCheckout` mutation in the [GraphQL Storefront API](/docs/storefront/cart-checkout/guide/graphql-storefront#handling-payments).
         *
         *     After the token is created, use the token to [Process a payment](/docs/rest-payments/processing#process-payment). The token is valid for one hour.
         *
         *     **Required Fields**
         *     * order_id
         */
        readonly post: operations["createPaymentAccessToken"];
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Order */
        readonly Order: {
            /**
             * Format: int32
             * @description Identifier for the order
             */
            readonly id: number;
            /**
             * @description Whether this is a recurring order. If the order is recurring this field should be set to true in order to let the payment gateway know.
             * @default false
             * @example false
             */
            readonly is_recurring: boolean;
        };
    };
    responses: never;
    parameters: {
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
        readonly Accept: string;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
        readonly ContentType: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    readonly createPaymentAccessToken: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                readonly "Content-Type"?: components["parameters"]["ContentType"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody: {
            readonly content: {
                readonly "application/json": {
                    readonly order: components["schemas"]["Order"];
                };
            };
        };
        readonly responses: {
            /** @description Payment access token has been successfully created. */
            readonly 201: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /** Payment Access Token */
                        readonly data?: {
                            /** @description Payment access token. This token is required in the subsequent request to the [Process a payment](/docs/rest-payments/processing#process-payment) endpoint. */
                            readonly id: string;
                        };
                        /** @description Response metadata. */
                        readonly meta?: {
                            readonly [key: string]: unknown;
                        };
                    };
                };
            };
            /** @description Request has been rejected */
            readonly 400: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /**
                         * Format: int32
                         * @description HTTP status code
                         */
                        readonly status: number;
                        /** @description Short summary describing the particular error */
                        readonly title: string;
                        /** @description Detailed summary describing the particular error */
                        readonly detail?: string;
                        /** @description Reference that identifies the particular error */
                        readonly type: string;
                        /**
                         * Format: int32
                         * @description Code representing the particular error
                         */
                        readonly code?: number;
                        readonly errors?: {
                            readonly [key: string]: string;
                        };
                    };
                };
            };
            /** @description Valid authentication required */
            readonly 401: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /**
                         * Format: int32
                         * @description HTTP status code
                         */
                        readonly status: number;
                        /** @description Short summary describing the particular error */
                        readonly title: string;
                        /** @description Detailed summary describing the particular error */
                        readonly detail?: string;
                        /** @description Reference that identifies the particular error */
                        readonly type: string;
                        /**
                         * Format: int32
                         * @description Code representing the particular error
                         */
                        readonly code?: number;
                        readonly errors?: {
                            readonly [key: string]: string;
                        };
                    };
                };
            };
            /** @description Request has been rejected due to resource not being found */
            readonly 404: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /**
                         * Format: int32
                         * @description HTTP status code
                         */
                        readonly status: number;
                        /** @description Short summary describing the particular error */
                        readonly title: string;
                        /** @description Detailed summary describing the particular error */
                        readonly detail?: string;
                        /** @description Reference that identifies the particular error */
                        readonly type: string;
                        /**
                         * Format: int32
                         * @description Code representing the particular error
                         */
                        readonly code?: number;
                        readonly errors?: {
                            readonly [key: string]: string;
                        };
                    };
                };
            };
            /** @description Request has been rejected due to conflict with the current state of the target resource */
            readonly 409: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /**
                         * Format: int32
                         * @description HTTP status code
                         */
                        readonly status: number;
                        /** @description Short summary describing the particular error */
                        readonly title: string;
                        /** @description Detailed summary describing the particular error */
                        readonly detail?: string;
                        /** @description Reference that identifies the particular error */
                        readonly type: string;
                        /**
                         * Format: int32
                         * @description Code representing the particular error
                         */
                        readonly code?: number;
                        readonly errors?: {
                            readonly [key: string]: string;
                        };
                    };
                };
            };
            /** @description Request has been rejected due to missing or invalid data */
            readonly 422: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /**
                         * Format: int32
                         * @description HTTP status code
                         */
                        readonly status: number;
                        /** @description Short summary describing the particular error */
                        readonly title: string;
                        /** @description Detailed summary describing the particular error */
                        readonly detail?: string;
                        /** @description Reference that identifies the particular error */
                        readonly type: string;
                        /**
                         * Format: int32
                         * @description Code representing the particular error
                         */
                        readonly code?: number;
                        readonly errors?: {
                            readonly [key: string]: string;
                        };
                    };
                };
            };
            /** @description Internal server error */
            readonly default: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /**
                         * Format: int32
                         * @description HTTP status code
                         */
                        readonly status: number;
                        /** @description Short summary describing the particular error */
                        readonly title: string;
                        /** @description Detailed summary describing the particular error */
                        readonly detail?: string;
                        /** @description Reference that identifies the particular error */
                        readonly type: string;
                        /**
                         * Format: int32
                         * @description Code representing the particular error
                         */
                        readonly code?: number;
                        readonly errors?: {
                            readonly [key: string]: string;
                        };
                    };
                };
            };
        };
    };
}
