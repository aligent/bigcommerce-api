/**
 * This file was auto-generated by openapi-typescript and ts-morph.
 * Do not make direct changes to the file.
 */

export interface paths {
    readonly "/payments/methods": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get All Payment Methods
         * @deprecated
         * @description Gets the list of enabled payment methods. Default sorting is by payment method, alphabetically from A to Z.
         *
         *     > #### Note
         *     > Avoid using this API operation if possible. It is not supported; therefore, all enabled providers may not appear.
         *
         */
        readonly get: operations["getAllPaymentMethods"];
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * payment_Base
         * @example {
         *       "code": "squarev2",
         *       "name": "Square",
         *       "test_mode": false
         *     }
         */
        readonly payment_Base: {
            /**
             * @description Unique platform-wide code identifying the payment method.
             * @example squarev2
             */
            readonly code?: string;
            /**
             * @description Descriptive name of the payment method.
             * @example Square
             */
            readonly name?: string;
            /**
             * @description Determines whether the payment gateway is in test mode. Always false for offline payment methods.
             * @example false
             */
            readonly test_mode?: boolean;
        };
    };
    responses: never;
    parameters: {
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
        readonly Accept: string;
        /** @description Request a specific page of results. The value of the limit query parameter determines the number of responses per page. */
        readonly PageQuery: number;
        /** @description Set the number of responses per page. */
        readonly LimitQuery: number;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    readonly getAllPaymentMethods: {
        readonly parameters: {
            readonly query?: {
                /** @description Request a specific page of results. The value of the limit query parameter determines the number of responses per page. */
                readonly page?: components["parameters"]["PageQuery"];
                /** @description Set the number of responses per page. */
                readonly limit?: components["parameters"]["LimitQuery"];
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": readonly components["schemas"]["payment_Base"][];
                };
            };
        };
    };
}
