/**
 * This file was auto-generated by openapi-typescript and ts-morph.
 * Do not make direct changes to the file.
 */

export interface paths {
    readonly "/marketing/email-templates": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get Email Templates
         * @description Get a list of email templates.
         */
        readonly get: operations["getEmailTemplates"];
    };
    readonly "/marketing/email-templates/{template-name}": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path: {
                readonly "template-name": string;
            };
            readonly cookie?: never;
        };
        /**
         * Get an Email Template
         * @description Get a single global email template or a channel-specific email template override.
         */
        readonly get: operations["getEmailTemplate"];
        /**
         * Update a Template
         * @description Update a global template or create a channel-specific email template override.
         */
        readonly put: operations["updateEmailTemplate"];
        /**
         * Delete Email Template Override
         * @description Removes a channel-specific email template override.
         */
        readonly delete: operations["deleteEmailTemplateOverride"];
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        readonly ErrorResponse: components["schemas"]["BaseError"] & {
            readonly errors?: components["schemas"]["DetailedErrors"];
        };
        /** @description Error payload for the BigCommerce API.
         *      */
        readonly BaseError: {
            /** @description The HTTP status code.
             *      */
            readonly status?: number;
            /** @description The error title describing the particular error.
             *      */
            readonly title?: string;
            readonly type?: string;
            readonly instance?: string;
        };
        readonly DetailedErrors: {
            readonly [key: string]: string;
        };
        /**
         * EmailTemplatesCollection
         * @description A collection of all email templates.
         */
        readonly EmailTemplatesCollection: readonly components["schemas"]["EmailTemplate"][];
        /**
         * EmailTemplate
         * @description Data for a particular email template
         */
        readonly EmailTemplate: {
            /**
             * @example account_reset_password_email
             * @enum {string}
             */
            readonly type_id?: "abandoned_cart_email" | "account_details_changed_email" | "combined_order_status_email" | "createaccount_email" | "createguestaccount_email" | "giftcertificate_email" | "invoice_email" | "ordermessage_notification" | "return_confirmation_email" | "return_statuschange_email" | "product_review_email" | "account_reset_password_email";
            /** @example <!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title> </head> <body> <p>     {{lang "reset_password" name=store.name}} </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}} </a>  </body> </html> */
            readonly body?: string;
            readonly translations?: components["schemas"]["LocaleCollection"];
            /** @example Reset your password at {{store.name}} */
            readonly subject?: string;
        };
        /**
         * LocaleObject
         * @description A particular locale ºs translations.
         */
        readonly LocaleObject: {
            /**
             * @description Locale code for this language, such as "en", "en-us", "fr-ca".
             * @example en
             */
            readonly locale?: string;
            /**
             * @description Language keys for the template. User-defined. Should match any lang keys used in the template.
             * @example {
             *       "reset_password": "To change your customer account password at {{name}} please click this link or copy and paste it into your browser:"
             *     }
             */
            readonly keys?: {
                readonly [key: string]: unknown;
            };
        };
        /**
         * LocaleCollection
         * @description A collection of locale translations for the static language.
         */
        readonly LocaleCollection: readonly components["schemas"]["LocaleObject"][];
        /**
         * EmailTemplateUpdate
         * @description Data for updated template
         */
        readonly EmailTemplateUpdate: {
            /** @example <!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title> </head> <body> <p>     {{lang "reset_password" name=store.name}} </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}} </a>  </body> </html> */
            readonly body: string;
            readonly translations?: components["schemas"]["LocaleCollection"];
            /** @example Reset your password at {{store.name}} */
            readonly subject: string;
        };
        /** scratch */
        readonly scratch: {
            readonly id?: string;
        };
    };
    responses: never;
    parameters: {
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
        readonly Accept: string;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
        readonly ContentType: string;
        /** @description Channel ID to use for channel-specific settings. If omitted, you will interact with the global setting only. */
        readonly ChannelIdParam: number;
        /** @description Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults. */
        readonly RequiredChannelIdParamForDelete: number;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    readonly getEmailTemplates: {
        readonly parameters: {
            readonly query?: {
                /** @description Channel ID to use for channel-specific settings. If omitted, you will interact with the global setting only. */
                readonly channel_id?: components["parameters"]["ChannelIdParam"];
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            /** @description An array of email templates on the store
             *      */
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        readonly data?: components["schemas"]["EmailTemplatesCollection"];
                        /** @description Response metadata. */
                        readonly meta?: {
                            readonly [key: string]: unknown;
                        };
                    };
                };
            };
        };
    };
    readonly getEmailTemplate: {
        readonly parameters: {
            readonly query?: {
                /** @description Channel ID to use for channel-specific settings. If omitted, you will interact with the global setting only. */
                readonly channel_id?: components["parameters"]["ChannelIdParam"];
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path: {
                readonly "template-name": string;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            /** @description OK */
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        readonly data?: components["schemas"]["EmailTemplate"];
                        /** @description Response metadata. */
                        readonly meta?: {
                            readonly [key: string]: unknown;
                        };
                    };
                };
            };
        };
    };
    readonly updateEmailTemplate: {
        readonly parameters: {
            readonly query?: {
                /** @description Channel ID to use for channel-specific settings. If omitted, you will interact with the global setting only. */
                readonly channel_id?: components["parameters"]["ChannelIdParam"];
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                readonly "Content-Type"?: components["parameters"]["ContentType"];
            };
            readonly path: {
                readonly "template-name": string;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: {
            readonly content: {
                readonly "application/json": components["schemas"]["EmailTemplate"];
            };
        };
        readonly responses: {
            /** @description OK */
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        readonly data?: components["schemas"]["EmailTemplate"];
                        /** @description Response metadata. */
                        readonly meta?: {
                            readonly [key: string]: unknown;
                        };
                    };
                };
            };
            /** @description Bad Request */
            readonly 400: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readonly deleteEmailTemplateOverride: {
        readonly parameters: {
            readonly query: {
                /** @description Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults. */
                readonly channel_id: components["parameters"]["RequiredChannelIdParamForDelete"];
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path: {
                readonly "template-name": string;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            /** @description OK */
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
