/**
 * This file was auto-generated by openapi-typescript and ts-morph.
 * Do not make direct changes to the file.
 */

export interface paths {
    readonly "/pricelists": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get All Price Lists
         * @description Returns a list of *Price Lists*. Optional parameters can be passed in.
         */
        readonly get: operations["getPriceLists"];
        /**
         * Create a Price List
         * @description Creates a *Price List*.
         *
         *     **Required Fields**
         *     * name
         */
        readonly post: operations["createPriceList"];
        /**
         * Delete All Price Lists
         * @description Deletes a *Price List*. All associated price records are also removed. Optional parameters can be passed in.
         */
        readonly delete: operations["deletePriceLists"];
    };
    readonly "/pricelists/{price_list_id}": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get a Price List
         * @description  Returns a single *Price List*.
         */
        readonly get: operations["getPriceList"];
        /**
         * Update a Price List
         * @description Updates a *Price List*.
         */
        readonly put: operations["updatePriceList"];
        /**
         * Delete a Price List
         * @description Deletes a *Price List*. All associated price records are also removed.
         *     **Limits**
         *     * Limit of 1 concurrent request.
         */
        readonly delete: operations["deletePriceList"];
    };
    readonly "/pricelists/records": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Create Batch of Price Lists Records
         * @description Creates a batch of `Price Lists Records`; may include price list records from more than one price list.  Concurrency limit of 1.
         */
        readonly put: operations["upsertPriceListsRecords"];
    };
    readonly "/pricelists/{price_list_id}/records": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get All Price List Records
         * @description Returns a list of *Price List Records* associated with a *Price List*.
         *
         *     **Notes**
         *     * Supports up to 10 simultaneous GET requests. Running more than the allowed number of requests concurrently on the same store will result in a `429` status error and your additional requests will fail.
         *     * Store Pricelist Records data to reduce the number of calls and maximize performance.
         */
        readonly get: operations["getPriceListRecords"];
        /**
         * Upsert Price List Records
         * @description Creates or updates *Price List Records*.
         *
         *     **Required Fields**
         *     * currency
         *
         *     **Notes**
         *     * Batch requests support up to 1,000 items per request.
         *     * Up to 2 concurrent batch upsert requests are supported with this API. Running more than the allowed concurrent requests in parallel on the **same store** will cause a `429` error, and your additional requests will fail. You are encouraged to run requests sequentially with as many records per request as possible to maximize performance.
         *     * When updating a product with variants, or multiple SKUs, don't include records for the parent product SKU.
         */
        readonly put: operations["upsertPriceListRecords"];
        /**
         * Delete a Price List Record
         * @description Deletes a *Price List Record*. Deleting the records does not delete the Price List. Optional parameters can be passed in.
         */
        readonly delete: operations["deletePriceListRecords"];
    };
    readonly "/pricelists/{price_list_id}/records/{variant_id}": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get Price Records by Variant
         * @description Returns *Price List Records* using the variant ID. Will also contain currency records.
         *
         *     **Notes**
         *     * Supports up to 40 simultaneous GET requests. Running more than the allowed number of requests concurrently on the same store will result in a `429` status error, and your additional requests will fail.
         *     * Store Pricelist Records data to reduce the number of calls and maximize performance.
         *
         */
        readonly get: operations["getPriceListRecordsByVariantId"];
    };
    readonly "/pricelists/{price_list_id}/records/{variant_id}/{currency_code}": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get a Price Record by Currency Code
         * @description Returns a *Price List Record* using the currency code. You can use optional parameters.
         *     **Notes**
         *     * Supports up to 50 simultaneous GET requests. Running more than the allowed number of requests concurrently on the same store will result in a `429` status error, and your additional requests will fail.
         */
        readonly get: operations["getPriceListRecord"];
        /**
         * Set Price List Record by Currency Code
         * @description Creates or updates a *Price List Record* using the currency code.
         *     **Notes**
         *     * Supports up to 40 simultaneous PUT requests. Running more than the allowed number of requests concurrently on the same store will result in a `429` status error, and your additional requests will fail.
         */
        readonly put: operations["setPriceListRecord"];
        /**
         * Delete a Price Record by Currency Code
         * @description Deletes a *Price List Record* using the currency code.
         *     **Note:**
         *     * Supports up to 25 simultaneous DELETE requests. Running more than the allowed number of requests concurrently on the same store will result in a `429` status error, and your additional requests will fail.
         */
        readonly delete: operations["deletePriceListRecord"];
    };
    readonly "/pricelists/assignments": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get Price List Assignments
         * @description Fetches an array of `Price List Assignments` matching a particular Customer Group and Price List and Channel.
         */
        readonly get: operations["getListOfPriceListAssignments"];
        /**
         * Create Price List Assignments
         * @description Creates a batch of `Price List Assignments`.
         *     **Note:** The batch limit for `Price List Assignments` is 25.
         */
        readonly post: operations["createPriceListAssignments"];
        /**
         * Delete Price List Assignments
         * @description Deletes one or more `Price List Assignments` objects from BigCommerce using a query parameter. You must use at least one query parameter.
         */
        readonly delete: operations["deletePriceListAssignments"];
    };
    readonly "/pricelists/{price_list_id}/assignments": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Upsert Price List Assignment
         * @description Upsert a single `Price List Assignment` for a `Price List`.
         *     **Note:**
         *     * Supports up to 25 simultaneous PUT requests. Running more than the allowed number of requests concurrently on the same store will result in a `429` status error and your additional requests will fail.
         */
        readonly put: operations["upsertPriceListAssignment"];
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description `Price List Assignments` object used in a batch create request. */
        readonly AssignmentsForRequest: {
            /**
             * Format: int32
             * @description Price list ID for assignment.
             * @example 1
             */
            readonly price_list_id: number;
            /**
             * Format: int32
             * @description Customer group ID for assignment.
             * @example 2
             */
            readonly customer_group_id?: number;
            /**
             * Format: int32
             * @description Channel ID for assignment
             * @example 1
             */
            readonly channel_id?: number;
        };
        readonly AssignmentForPutRequest: {
            /**
             * Format: int32
             * @description Customer group ID for assignment.
             * @example 2
             */
            readonly customer_group_id: number;
            /**
             * Format: int32
             * @description Channel ID for assignment
             * @example 1
             */
            readonly channel_id: number;
        };
        readonly AssignmentForPutResponse: {
            readonly data?: {
                /**
                 * Format: int32
                 * @description Unique identifier for this price list assignment.
                 * @example 1
                 */
                readonly id?: number;
                /**
                 * Format: int32
                 * @description Price list ID for assignment.
                 * @example 1
                 */
                readonly price_list_id?: number;
                /**
                 * Format: int32
                 * @description Customer group ID for assignment.
                 * @example 2
                 */
                readonly customer_group_id?: number;
                /**
                 * Format: int32
                 * @description Channel ID for assignment.
                 * @example 2
                 */
                readonly channel_id?: number;
            };
            readonly meta?: components["schemas"]["Meta"];
        };
        readonly PriceRecordBatchItem: {
            /**
             * @description The price list ID the price record is associated with.
             * @example 1
             */
            readonly price_list_id?: number;
            /**
             * @description The price list with which the price record is associated. Either `variant_id` or `sku` is required.
             * @example 5
             */
            readonly variant_id?: number;
            /**
             * @description The SKU for the variant with which this price record is associated. Either `sku` or `variant_id` is required.
             * @example SKU-001
             */
            readonly sku?: string;
            /**
             * Format: ISO:4217
             * @description The 3-letter country code with which this price record is associated.
             * @example usd
             */
            readonly currency?: string;
        } & components["schemas"]["PriceRecordBase"];
        /** @description Common Price Record properties. */
        readonly PriceRecordBase: {
            /**
             * Format: double
             * @description The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
             * @example 0
             */
            readonly price?: number;
            /**
             * Format: double
             * @description The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
             * @example 0
             */
            readonly sale_price?: number;
            /**
             * Format: double
             * @description The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product.  If empty, the retail price will be treated as not being set on this variant.
             * @example 0
             */
            readonly retail_price?: number;
            /**
             * Format: double
             * @description The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the `map_ price` will be treated as not being set on this variant.
             * @example 0
             */
            readonly map_price?: number;
            readonly bulk_pricing_tiers?: readonly components["schemas"]["BulkPricingTier"][];
        };
        readonly BulkPricingTier: {
            /**
             * @description The cart's minimum quantity of associated variants needed to qualify for this tier's pricing.
             * @example 1
             */
            readonly quantity_min?: number;
            /**
             * @description The cart's maximum allowed quantity of associated variants to qualify for this tier's pricing.
             * @example 10
             */
            readonly quantity_max?: number;
            /**
             * @description The type of adjustment that is made.
             *     Acceptable values:
             *     * price – the adjustment amount per product
             *     * percent – the adjustment as a percentage of the original price
             *     * fixed – the adjusted absolute price of the product
             * @example fixed
             * @enum {string}
             */
            readonly type?: "fixed" | "price" | "percent";
            /**
             * Format: double
             * @description The price adjustment amount. This value and the type will decide the price per variant for the pricing tier.
             * @example 0
             */
            readonly amount?: number;
        };
        /** @description Empty object for Success case for Batch API. */
        readonly SuccessBatchResponse: {
            /** @example {} */
            readonly data?: {
                readonly [key: string]: unknown;
            };
            /** @example {} */
            readonly meta?: {
                readonly [key: string]: unknown;
            };
        };
        /** @description Error during `Price Record` batch PUT. Includes data sent in the request and errors. */
        readonly PriceRecordBatchErrorResponse: {
            readonly data?: components["schemas"]["PriceRecordIdentifiers"];
            readonly field_errors?: components["schemas"]["DetailedErrors"];
        };
        /** @description The `Price Record` object used in batch create or update. */
        readonly PriceRecordIdentifiers: {
            /** @description The Price List with which this price record is associated. */
            readonly price_list_id?: number;
            /** @description The variant with which this price record is associated. Either `variant_id` or `sku` is required. */
            readonly variant_id?: number;
            /** @description The variant with which this price record is associated. Either `sku` or `variant_id` is required. */
            readonly sku?: string;
            /**
             * Format: ISO-4217
             * @description The 3-letter currency code with which this price set is associated.
             */
            readonly currency?: string;
        };
        readonly DetailedErrors: {
            readonly [key: string]: string;
        };
        readonly PriceListAssignmentsBatchErrorResponse: {
            readonly status?: number;
            readonly title?: string;
            readonly type?: string;
            /** Detailed Errors */
            readonly errors?: {
                readonly [key: string]: unknown;
            };
            readonly meta?: {
                readonly saved_records?: number;
            };
        };
        readonly AssignmentForGetResponse: {
            /**
             * Format: int32
             * @description Unique identifier for this price list assignment.
             * @example 1
             */
            readonly id?: number;
            /**
             * Format: int32
             * @description Pricelist ID for assignment.
             * @example 1
             */
            readonly price_list_id?: number;
            /**
             * Format: int32
             * @description Customer group ID for assignment.
             * @example 2
             */
            readonly customer_group_id?: number;
            /**
             * Format: int32
             * @description Channel ID for assignment.
             * @example 2
             */
            readonly channel_id?: number;
        };
        /** @description Array of the price list assignments matching the filter. The response is paginated. */
        readonly AssignmentsForGetResponse: {
            readonly data?: readonly components["schemas"]["AssignmentForGetResponse"][];
            readonly meta?: components["schemas"]["CollectionMeta"];
        };
        /**
         * Collection Meta
         * @description 'Contains data about paginating the response via cursors. If no pagination details are specified or if you only provide a limit, then both properties will be present. When a 'before' or 'after' cursor is provided, only the 'cursor_pagination' property will be present. When a 'page' parameter is provided, only the offset based 'pagination' property will be present.'
         */
        readonly CollectionMeta: {
            /**
             * Pagination
             * @description Data related to the response, including pagination and collection totals.
             */
            readonly pagination?: {
                /**
                 * @description Total number of items in the result set.
                 *
                 * @example 36
                 */
                readonly total?: number;
                /**
                 * @description Total number of items in the collection response.
                 *
                 * @example 36
                 */
                readonly count?: number;
                /**
                 * @description The amount of items returned in the collection per page, controlled by the limit parameter.
                 *
                 * @example 50
                 */
                readonly per_page?: number;
                /**
                 * @description The page you are currently on within the collection.
                 *
                 * @example 1
                 */
                readonly current_page?: number;
                /**
                 * @description The total number of pages in the collection.
                 *
                 * @example 1
                 */
                readonly total_pages?: number;
            };
            /** Cursor Pagination */
            readonly cursor_pagination?: {
                /**
                 * Format: int32
                 * @description Total number of items in the collection response.
                 */
                readonly count?: number;
                /**
                 * Format: int32
                 * @description The number of items that can be returned per page, determined by the limit parameter—whether explicitly set, defaulted, or capped at the maximum limit.
                 */
                readonly per_page?: number;
                /** @description A string representing the starting point of the current page in the collection. */
                readonly start_cursor?: string;
                /** @description A string representing the ending point of the current page in the collection. */
                readonly end_cursor?: string;
                /**
                 * links
                 * @description Pagination links for the previous and next parts of the whole collection.
                 */
                readonly links?: {
                    /** @description Link to the previous page returned in the response. */
                    readonly previous?: string;
                    /** @description Link to the current page returned in the response. */
                    readonly current?: string;
                    /** @description Link to the next page returned in the response. */
                    readonly next?: string;
                };
            };
        };
        /**
         * Response meta
         * @description Response metadata.
         */
        readonly Meta: {
            readonly [key: string]: unknown;
        };
        /** Error Response */
        readonly ErrorResponse: {
            /** @description The HTTP status code.
             *      */
            readonly status?: number;
            /** @description The error title describing the particular error.
             *      */
            readonly title?: string;
            readonly type?: string;
            readonly instance?: string;
        } & {
            /** Detailed Errors */
            readonly errors?: {
                readonly [key: string]: unknown;
            };
        };
        /** @description Batch of price list assignments. */
        readonly CreateBatchPriceListAssignmentsRequest: readonly components["schemas"]["AssignmentsForRequest"][];
    };
    responses: never;
    parameters: {
        /** @description Filter results by a comma-separated list of channel IDs. */
        readonly ChannelIdInParam: readonly number[];
        /** @description The ID of the `Price List` requested.
         *      */
        readonly PriceListIdParam: number;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
        readonly Accept: string;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
        readonly ContentType: string;
        /** @description The ID of the `Price List Assignment`. */
        readonly FilterAssignmentIdParam: number;
        /** @description The ID of the `Price List`. */
        readonly FilterPriceListIdParam: number;
        /** @description The ID of the `Customer Group`. */
        readonly FilterCustomerGroupIdParam: number;
        /** @description The ID of the `Channel`. */
        readonly FilterChannelIdParam: number;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    readonly getPriceLists: {
        readonly parameters: {
            readonly query?: {
                /** @description Filter items by name.
                 *      */
                readonly name?: string;
                /** @description Filter items by date_created.
                 *      */
                readonly date_created?: string;
                /** @description Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15` */
                readonly date_modified?: string;
                /** @description Specifies the page number in a limited (paginated) list of products. */
                readonly page?: number;
                /** @description Controls the number of items per page in a limited (paginated) list of products. If you provide only a limit, the API returns both paginations while applying that limit. */
                readonly limit?: number;
                /** @description A cursor that can be used for backwards pagination. Will fetch results before the position corresponding to the cursor. Cannot be used with the 'page' query parameter. Cannot be used with the 'after' query parameter. */
                readonly before?: string;
                /** @description A cursor that can be used for forwards pagination. Will fetch results after the position corresponding to the cursor. Cannot be used with the 'page' query parameter. Cannot be used with the 'before' query parameter. */
                readonly after?: string;
                readonly "id:in"?: readonly number[];
                readonly "name:like"?: string;
                readonly "date_created:max"?: string;
                readonly "date_created:min"?: string;
                readonly "date_modified:max"?: string;
                readonly "date_modified:min"?: string;
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "data": [
                     *         {
                     *           "id": 1,
                     *           "name": "Warehouse",
                     *           "date_created": "2022-02-26T17:33:11Z",
                     *           "date_modified": "2022-05-08T14:05:27Z",
                     *           "active": true
                     *         },
                     *         {
                     *           "id": 2,
                     *           "name": "B2B",
                     *           "date_created": "2022-02-26T17:37:01Z",
                     *           "date_modified": "2022-02-26T17:37:01Z",
                     *           "active": true
                     *         },
                     *         {
                     *           "id": 3,
                     *           "name": "Wholesale",
                     *           "date_created": "2022-04-05T16:05:12Z",
                     *           "date_modified": "2022-04-05T16:05:12Z",
                     *           "active": true
                     *         }
                     *       ],
                     *       "meta": {
                     *         "pagination": {
                     *           "total": 3,
                     *           "count": 3,
                     *           "per_page": 50,
                     *           "current_page": 1,
                     *           "total_pages": 1
                     *         },
                     *         "cursor_pagination": {
                     *           "count": 8,
                     *           "per_page": 50,
                     *           "start_cursor": "Nw==",
                     *           "end_cursor": "MTQ=",
                     *           "links": {}
                     *         }
                     *       }
                     *     } */
                    readonly "application/json": {
                        readonly data?: readonly ({
                            /**
                             * @description The unique numeric ID of the `Price List`; this number increments sequentially.
                             *
                             * @example 3
                             */
                            readonly id?: number;
                            /**
                             * Format: date-time
                             * @description The date on which the `Price List` was created.
                             *
                             * @example 2018-04-05T16:05:12Z
                             */
                            readonly date_created?: string;
                            /**
                             * Format: date-time
                             * @description The date on which the `Price List` was created.
                             *
                             * @example 2018-04-05T16:05:12Z
                             */
                            readonly date_modified?: string;
                        } & {
                            /**
                             * @description The unique name of the Price List. Required in a POST request.
                             * @example Wholesale
                             */
                            readonly name: string;
                            /**
                             * @description Boolean value that specifies whether this `Price List` and its prices are active or not. Defaults to `true`.
                             *
                             * @example true
                             */
                            readonly active?: boolean;
                        })[];
                        /**
                         * Collection Meta
                         * @description 'Contains data about paginating the response via cursors. If no pagination details are specified or if you only provide a limit, then both properties will be present. When a 'before' or 'after' cursor is provided, only the 'cursor_pagination' property will be present. When a 'page' parameter is provided, only the offset based 'pagination' property will be present.'
                         */
                        readonly meta?: {
                            /**
                             * Pagination
                             * @description Data related to the response, including pagination and collection totals.
                             */
                            readonly pagination?: {
                                /**
                                 * @description Total number of items in the result set.
                                 *
                                 * @example 36
                                 */
                                readonly total?: number;
                                /**
                                 * @description Total number of items in the collection response.
                                 *
                                 * @example 36
                                 */
                                readonly count?: number;
                                /**
                                 * @description The amount of items returned in the collection per page, controlled by the limit parameter.
                                 *
                                 * @example 50
                                 */
                                readonly per_page?: number;
                                /**
                                 * @description The page you are currently on within the collection.
                                 *
                                 * @example 1
                                 */
                                readonly current_page?: number;
                                /**
                                 * @description The total number of pages in the collection.
                                 *
                                 * @example 1
                                 */
                                readonly total_pages?: number;
                            };
                            /** Cursor Pagination */
                            readonly cursor_pagination?: {
                                /**
                                 * Format: int32
                                 * @description Total number of items in the collection response.
                                 */
                                readonly count?: number;
                                /**
                                 * Format: int32
                                 * @description The number of items that can be returned per page, determined by the limit parameter—whether explicitly set, defaulted, or capped at the maximum limit.
                                 */
                                readonly per_page?: number;
                                /** @description A string representing the starting point of the current page in the collection. */
                                readonly start_cursor?: string;
                                /** @description A string representing the ending point of the current page in the collection. */
                                readonly end_cursor?: string;
                                /**
                                 * links
                                 * @description Pagination links for the previous and next parts of the whole collection.
                                 */
                                readonly links?: {
                                    /** @description Link to the previous page returned in the response. */
                                    readonly previous?: string;
                                    /** @description Link to the current page returned in the response. */
                                    readonly current?: string;
                                    /** @description Link to the next page returned in the response. */
                                    readonly next?: string;
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    readonly createPriceList: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                readonly "Content-Type"?: components["parameters"]["ContentType"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody: {
            readonly content: {
                readonly "application/json": {
                    /**
                     * @description The unique name of the Price List. Required in a POST request.
                     * @example Wholesale
                     */
                    readonly name: string;
                    /**
                     * @description Boolean value that specifies whether this `Price List` and its prices are active or not. Defaults to `true`.
                     *
                     * @example true
                     */
                    readonly active?: boolean;
                };
            };
        };
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "data": {
                     *         "id": 4,
                     *         "name": "Wholesale Group - Trade Show",
                     *         "date_created": "2022-09-17T18:41:59Z",
                     *         "date_modified": "2022-09-17T18:41:59Z",
                     *         "active": false
                     *       },
                     *       "meta": {}
                     *     } */
                    readonly "application/json": {
                        /** Price List */
                        readonly data?: {
                            /**
                             * @description The unique numeric ID of the `Price List`; this number increments sequentially.
                             *
                             * @example 3
                             */
                            readonly id?: number;
                            /**
                             * Format: date-time
                             * @description The date on which the `Price List` was created.
                             *
                             * @example 2022-04-05T16:05:12Z
                             */
                            readonly date_created?: string;
                            /**
                             * Format: date-time
                             * @description The date on which the `Price List` was created.
                             *
                             * @example 2022-04-05T16:05:12Z
                             */
                            readonly date_modified?: string;
                        } & {
                            /**
                             * @description The unique name of the Price List. Required in a POST request.
                             * @example Wholesale
                             */
                            readonly name: string;
                            /**
                             * @description Boolean value that specifies whether this `Price List` and its prices are active or not. Defaults to `true`.
                             *
                             * @example true
                             */
                            readonly active?: boolean;
                        };
                        readonly meta?: components["schemas"]["Meta"];
                    };
                };
            };
            /** @description `Price List` conflicts with another Price List. This is the result of duplicate unique values, such as `name`.
             *      */
            readonly 409: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /** Detailed Errors */
                        readonly errors?: {
                            readonly [key: string]: unknown;
                        };
                        readonly instance?: string;
                        /** @description The HTTP status code.
                         *      */
                        readonly status?: number;
                        /** @description The error title describing the particular error.
                         *      */
                        readonly title?: string;
                        readonly type?: string;
                    };
                };
            };
            /** @description `Price List` is not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
             *      */
            readonly 422: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /** Detailed Errors */
                        readonly errors?: {
                            readonly [key: string]: unknown;
                        };
                        readonly instance?: string;
                        /** @description The HTTP status code.
                         *      */
                        readonly status?: number;
                        /** @description The error title describing the particular error.
                         *      */
                        readonly title?: string;
                        readonly type?: string;
                    };
                };
            };
        };
    };
    readonly deletePriceLists: {
        readonly parameters: {
            readonly query?: {
                /** @description Filter by ID. Accepts multiple comma-separated values.
                 *      */
                readonly "id:in"?: readonly number[];
                /** @description Filter items by name.
                 *      */
                readonly name?: string;
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            /** @description `204 No Content`. The action has been performed and no further information will be supplied. `null` is returned. */
            readonly 204: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        readonly [key: string]: unknown;
                    } | null;
                };
            };
        };
    };
    readonly getPriceList: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: number;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "data": {
                     *         "id": 2,
                     *         "name": "B2B",
                     *         "date_created": "2022-02-26T17:37:01Z",
                     *         "date_modified": "2022-09-17T18:34:36Z",
                     *         "active": true
                     *       },
                     *       "meta": {}
                     *     } */
                    readonly "application/json": {
                        /**
                         * Price List
                         * @description Specifies the Common Price List properties.
                         */
                        readonly data?: {
                            /**
                             * @description The unique numeric ID of the `Price List`; this number increments sequentially.
                             *
                             * @example 3
                             */
                            readonly id?: number;
                            /**
                             * Format: date-time
                             * @description The date on which the `Price List` was created.
                             *
                             * @example 2022-04-05T16:05:12Z
                             */
                            readonly date_created?: string;
                            /**
                             * Format: date-time
                             * @description The date on which the `Price List` was created.
                             *
                             * @example 2022-04-05T16:05:12Z
                             */
                            readonly date_modified?: string;
                            /**
                             * @description The unique name of the Price List. Required in a POST request.
                             * @example Wholesale
                             */
                            readonly name: string;
                            /**
                             * @description Boolean value that specifies whether this `Price List` and its prices are active or not. Defaults to `true`.
                             *
                             * @example true
                             */
                            readonly active?: boolean;
                        };
                        readonly meta?: components["schemas"]["Meta"];
                    };
                };
            };
        };
    };
    readonly updatePriceList: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                readonly "Content-Type"?: components["parameters"]["ContentType"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: number;
            };
            readonly cookie?: never;
        };
        readonly requestBody: {
            readonly content: {
                readonly "application/json": {
                    /**
                     * @description The unique name of the Price List. Required in a POST request.
                     * @example Wholesale
                     */
                    readonly name: string;
                    /**
                     * @description Whether or not this `Price List` and its prices are active. Defaults to `true`.
                     *
                     * @example true
                     */
                    readonly active?: boolean;
                };
            };
        };
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "data": {
                     *         "id": 2,
                     *         "name": "BigCommerce",
                     *         "date_created": "2022-02-26T17:37:01Z",
                     *         "date_modified": "2022-09-17T18:45:17Z",
                     *         "active": false
                     *       },
                     *       "meta": {}
                     *     } */
                    readonly "application/json": {
                        /** Price List */
                        readonly data?: {
                            /**
                             * @description The unique numeric ID of the `Price List`; this number increments sequentially.
                             *
                             * @example 3
                             */
                            readonly id?: number;
                            /**
                             * Format: date-time
                             * @description The date on which the `Price List` was created.
                             *
                             * @example 2022-04-05T16:05:12Z
                             */
                            readonly date_created?: string;
                            /**
                             * Format: date-time
                             * @description The date on which the `Price List` was created.
                             *
                             * @example 2022-04-05T16:05:12Z
                             */
                            readonly date_modified?: string;
                        } & {
                            /**
                             * @description The unique name of the Price List. Required in /POST.
                             * @example Wholesale
                             */
                            readonly name: string;
                            /**
                             * @description Whether or not this `Price List` and its prices are active.  Defaults to `true`.
                             *
                             * @example true
                             */
                            readonly active?: boolean;
                        };
                        readonly meta?: components["schemas"]["Meta"];
                    };
                };
            };
            /** @description The resource was not found.
             *      */
            readonly 404: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /** @description 404 HTTP status code.
                         *      */
                        readonly status?: number;
                        /** @description The error title describing the particular error. */
                        readonly title?: string;
                        readonly type?: string;
                        readonly instance?: string;
                    };
                };
            };
            /** @description `Price List` was in conflict with another Price List. This is the result of duplicate unique values, such as `name`.
             *      */
            readonly 409: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /** Detailed Errors */
                        readonly errors?: {
                            readonly [key: string]: unknown;
                        };
                        readonly instance?: string;
                        /** @description The HTTP status code.
                         *      */
                        readonly status?: number;
                        /** @description The error title describing the particular error.
                         *      */
                        readonly title?: string;
                        readonly type?: string;
                    };
                };
            };
            /** @description `Price List` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
             *      */
            readonly 422: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /** Detailed Errors */
                        readonly errors?: {
                            readonly [key: string]: unknown;
                        };
                        readonly instance?: string;
                        /** @description The HTTP status code.
                         *      */
                        readonly status?: number;
                        /** @description The error title describing the particular error.
                         *      */
                        readonly title?: string;
                        readonly type?: string;
                    };
                };
            };
        };
    };
    readonly deletePriceList: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: number;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            /** @description Action has been enacted and no further information is to be supplied. `null` is returned. */
            readonly 204: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    readonly upsertPriceListsRecords: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody: {
            readonly content: {
                readonly "application/json": readonly components["schemas"]["PriceRecordBatchItem"][];
            };
        };
        readonly responses: {
            /** @description Success response for batch PUT of `Price Records`.
             *      */
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["SuccessBatchResponse"];
                };
            };
            /** @description Error response for batch PUT of `Price Records`.  May include errors during partial update in non-strict mode.
             *      */
            readonly 422: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["PriceRecordBatchErrorResponse"];
                };
            };
        };
    };
    readonly getPriceListRecords: {
        readonly parameters: {
            readonly query?: {
                /** @description A comma-separated list of IDs for one or more variants for which prices were requested. */
                readonly "variant_id:in"?: readonly number[];
                /** @description A comma-separated list of IDs for one or more products for which prices were requested.
                 *      */
                readonly "product_id:in"?: readonly number[];
                /** @description Filter items by currency.
                 *      */
                readonly currency?: string;
                /** @description Specifies the page number in a limited (paginated) list of products. */
                readonly page?: number;
                /** @description Controls the number of items per page in a limited (paginated) list of products. If you provide only a limit, the API returns both paginations while applying that limit. */
                readonly limit?: number;
                /** @description A cursor that can be used for backwards pagination. Will fetch results before the position corresponding to the cursor. Cannot be used with the 'page' query parameter. Cannot be used with the 'after' query parameter. */
                readonly before?: string;
                /** @description A cursor that can be used for forwards pagination. Will fetch results after the position corresponding to the cursor. Cannot be used with the 'page' query parameter. Cannot be used with the 'before' query parameter. */
                readonly after?: string;
                /** @description Sub-resources to include on a price record, in a comma-separated list. Valid expansions currently include `bulk_pricing_tiers` and `sku`. Other values will be ignored.
                 *      */
                readonly include?: readonly ("bulk_pricing_tiers" | "sku")[];
                /** @description Filter items by price.
                 *      */
                readonly price?: number;
                /** @description Filter items by sale_price.
                 *      */
                readonly sale_price?: number;
                /** @description Filter items by retail_price.
                 *      */
                readonly retail_price?: number;
                /** @description Filter items by map_price.
                 *      */
                readonly map_price?: number;
                /** @description Filter items by calculated_price.
                 *      */
                readonly calculated_price?: number;
                /** @description Filter items by date_created.
                 *      */
                readonly date_created?: string;
                /** @description Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2022-06-15` */
                readonly date_modified?: string;
                /** @description Filter items by SKU.
                 *      */
                readonly sku?: string;
                readonly "sku:in"?: readonly string[];
                readonly "currency:in"?: readonly string[];
                readonly "price:max"?: number;
                readonly "price:min"?: number;
                readonly "sale_price:max"?: number;
                readonly "sale_price:min"?: number;
                readonly "retail_price:max"?: number;
                readonly "retail_price:min"?: number;
                readonly "map_price:max"?: number;
                readonly "map_price:min"?: number;
                readonly "calculated_price:max"?: number;
                readonly "calculated_price:min"?: number;
                readonly "date_created:max"?: string;
                readonly "date_created:min"?: string;
                readonly "date_modified:max"?: string;
                readonly "date_modified:min"?: string;
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: number;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "data": [
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 358,
                     *           "price": 25.48,
                     *           "sale_price": 18.57,
                     *           "retail_price": 25.48,
                     *           "map_price": 18.57,
                     *           "calculated_price": 25.48,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:33:14Z",
                     *           "currency": "usd",
                     *           "product_id": 187,
                     *           "bulk_pricing_tiers": []
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 359,
                     *           "price": 31.31,
                     *           "sale_price": 31.31,
                     *           "retail_price": 31.31,
                     *           "map_price": 31.31,
                     *           "calculated_price": 31.31,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:33:14Z",
                     *           "currency": "usd",
                     *           "product_id": 188,
                     *           "bulk_pricing_tiers": []
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 360,
                     *           "price": 18.57,
                     *           "sale_price": 18.57,
                     *           "retail_price": 18.57,
                     *           "map_price": 18.57,
                     *           "calculated_price": 18.57,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:33:14Z",
                     *           "currency": "usd",
                     *           "product_id": 189,
                     *           "bulk_pricing_tiers": []
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 361,
                     *           "price": 22.54,
                     *           "sale_price": 22.54,
                     *           "retail_price": 22.54,
                     *           "map_price": 22.54,
                     *           "calculated_price": 22.54,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:33:14Z",
                     *           "currency": "usd",
                     *           "product_id": 190,
                     *           "bulk_pricing_tiers": []
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 362,
                     *           "price": 27.39,
                     *           "sale_price": 27.39,
                     *           "retail_price": 27.39,
                     *           "map_price": 27.39,
                     *           "calculated_price": 27.39,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:51:26Z",
                     *           "currency": "usd",
                     *           "product_id": 191,
                     *           "bulk_pricing_tiers": [
                     *             {
                     *               "quantity_min": 10,
                     *               "quantity_max": 19,
                     *               "type": "percent",
                     *               "amount": 1
                     *             },
                     *             {
                     *               "quantity_min": 20,
                     *               "quantity_max": 29,
                     *               "type": "percent",
                     *               "amount": 3
                     *             },
                     *             {
                     *               "quantity_min": 30,
                     *               "quantity_max": 2147483647,
                     *               "type": "percent",
                     *               "amount": 5
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 382,
                     *           "price": 9.8,
                     *           "sale_price": 9.8,
                     *           "retail_price": 9.8,
                     *           "map_price": 9.8,
                     *           "calculated_price": 9.8,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:33:14Z",
                     *           "currency": "usd",
                     *           "product_id": 192,
                     *           "bulk_pricing_tiers": []
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 383,
                     *           "price": 24.5,
                     *           "sale_price": 24.5,
                     *           "retail_price": 24.5,
                     *           "map_price": 24.5,
                     *           "calculated_price": 24.5,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:33:14Z",
                     *           "currency": "usd",
                     *           "product_id": 192,
                     *           "bulk_pricing_tiers": []
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 384,
                     *           "price": 24.5,
                     *           "sale_price": 24.5,
                     *           "retail_price": 24.5,
                     *           "map_price": 24.5,
                     *           "calculated_price": 24.5,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:33:14Z",
                     *           "currency": "usd",
                     *           "product_id": 192,
                     *           "bulk_pricing_tiers": []
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 385,
                     *           "price": 9.8,
                     *           "sale_price": 9.8,
                     *           "retail_price": 9.8,
                     *           "map_price": 9.8,
                     *           "calculated_price": 9.8,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:33:14Z",
                     *           "currency": "usd",
                     *           "product_id": 193,
                     *           "bulk_pricing_tiers": []
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 386,
                     *           "price": 10.78,
                     *           "sale_price": 10.78,
                     *           "retail_price": 10.78,
                     *           "map_price": 10.78,
                     *           "calculated_price": 10.78,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:33:14Z",
                     *           "currency": "usd",
                     *           "product_id": 194,
                     *           "bulk_pricing_tiers": []
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 388,
                     *           "price": 10.78,
                     *           "sale_price": 10.78,
                     *           "retail_price": 10.78,
                     *           "map_price": 10.78,
                     *           "calculated_price": 10.78,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:35:42Z",
                     *           "currency": "usd",
                     *           "product_id": 195,
                     *           "bulk_pricing_tiers": [
                     *             {
                     *               "quantity_min": 2,
                     *               "quantity_max": 9,
                     *               "type": "percent",
                     *               "amount": 1
                     *             },
                     *             {
                     *               "quantity_min": 10,
                     *               "quantity_max": 19,
                     *               "type": "percent",
                     *               "amount": 2
                     *             },
                     *             {
                     *               "quantity_min": 20,
                     *               "quantity_max": 2147483647,
                     *               "type": "percent",
                     *               "amount": 3
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 389,
                     *           "price": 18.62,
                     *           "sale_price": 18.62,
                     *           "retail_price": 18.62,
                     *           "map_price": 18.62,
                     *           "calculated_price": 18.62,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:35:42Z",
                     *           "currency": "usd",
                     *           "product_id": 195,
                     *           "bulk_pricing_tiers": [
                     *             {
                     *               "quantity_min": 2,
                     *               "quantity_max": 9,
                     *               "type": "percent",
                     *               "amount": 1
                     *             },
                     *             {
                     *               "quantity_min": 10,
                     *               "quantity_max": 19,
                     *               "type": "percent",
                     *               "amount": 2
                     *             },
                     *             {
                     *               "quantity_min": 20,
                     *               "quantity_max": 2147483647,
                     *               "type": "percent",
                     *               "amount": 3
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 390,
                     *           "price": 10.78,
                     *           "sale_price": 10.78,
                     *           "retail_price": 10.78,
                     *           "map_price": 10.78,
                     *           "calculated_price": 10.78,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:35:42Z",
                     *           "currency": "usd",
                     *           "product_id": 195,
                     *           "bulk_pricing_tiers": [
                     *             {
                     *               "quantity_min": 2,
                     *               "quantity_max": 9,
                     *               "type": "percent",
                     *               "amount": 1
                     *             },
                     *             {
                     *               "quantity_min": 10,
                     *               "quantity_max": 19,
                     *               "type": "percent",
                     *               "amount": 2
                     *             },
                     *             {
                     *               "quantity_min": 20,
                     *               "quantity_max": 2147483647,
                     *               "type": "percent",
                     *               "amount": 3
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "price_list_id": 3,
                     *           "variant_id": 391,
                     *           "price": 10.78,
                     *           "sale_price": 10.78,
                     *           "retail_price": 10.78,
                     *           "map_price": 10.78,
                     *           "calculated_price": 10.78,
                     *           "date_created": "2022-09-17T20:33:14Z",
                     *           "date_modified": "2022-09-17T20:35:42Z",
                     *           "currency": "usd",
                     *           "product_id": 195,
                     *           "bulk_pricing_tiers": [
                     *             {
                     *               "quantity_min": 2,
                     *               "quantity_max": 9,
                     *               "type": "percent",
                     *               "amount": 1
                     *             },
                     *             {
                     *               "quantity_min": 10,
                     *               "quantity_max": 19,
                     *               "type": "percent",
                     *               "amount": 2
                     *             },
                     *             {
                     *               "quantity_min": 20,
                     *               "quantity_max": 2147483647,
                     *               "type": "percent",
                     *               "amount": 3
                     *             }
                     *           ]
                     *         }
                     *       ],
                     *       "meta": {
                     *         "pagination": {
                     *           "total": 14,
                     *           "count": 14,
                     *           "per_page": 50,
                     *           "current_page": 1,
                     *           "total_pages": 1
                     *         },
                     *         "cursor_pagination": {
                     *           "count": 1,
                     *           "per_page": 50,
                     *           "start_cursor": "MTUsMjEx",
                     *           "end_cursor": "MTUsMjEx",
                     *           "links": {}
                     *         }
                     *       }
                     *     } */
                    readonly "application/json": {
                        readonly data?: readonly ({
                            /**
                             * Format: double
                             * @description The price of the variant as seen on the storefront if a price record is in effect. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`. Read only.
                             *
                             * @example 24.64
                             */
                            readonly calculated_price?: number;
                            /**
                             * Format: date-time
                             * @description The date on which the Price entry was created.
                             *
                             * @example 2018-08-23T19:59:23Z
                             */
                            readonly date_created?: string;
                            /**
                             * Format: date-time
                             * @description The date on which the Price entry was created.
                             *
                             * @example 2018-08-23T19:59:23Z
                             */
                            readonly date_modified?: string;
                            /**
                             * @description The ID of the `Product` this `Price Record`ʼs `variant_id` is associated with. Read only.
                             *
                             * @example 158
                             */
                            readonly product_id?: number;
                        } & {
                            /**
                             * @description The Price List with which this price set is associated.
                             *
                             * @example 2
                             */
                            readonly price_list_id?: number;
                            /**
                             * @description The variant with which this price set is associated. Either `variant_id` or `sku` is required.
                             *
                             * @example 325
                             */
                            readonly variant_id?: number;
                            /** @description The variant with which this price set is associated. Either `sku` or `variant_id` is required.
                             *      */
                            readonly sku?: string;
                            /**
                             * Format: ISO-4217
                             * @description The 3-letter currency code with which this price set is associated.
                             *
                             * @example usd
                             */
                            readonly currency?: string;
                        } & {
                            /**
                             * Format: double
                             * @description The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                             *
                             * @example 3.99
                             */
                            readonly price?: number;
                            /**
                             * Format: double
                             * @description The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                             *
                             */
                            readonly sale_price?: number;
                            /**
                             * Format: double
                             * @description The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product. If empty, the retail price will be treated as not being set on this variant.
                             *
                             */
                            readonly retail_price?: number;
                            /**
                             * Format: double
                             * @description The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                             *
                             */
                            readonly map_price?: number;
                            readonly bulk_pricing_tiers?: readonly {
                                /**
                                 * @description The minimum quantity of associated variant in the cart needed to qualify for this tier's pricing.
                                 *
                                 * @example 1
                                 */
                                readonly quantity_min?: number;
                                /**
                                 * @description The maximum allowed quantity of associated variant in the cart to qualify for this tier's pricing. `null` indicates that there is no maximum allowed quantity for this tier.
                                 *
                                 * @example 10
                                 */
                                readonly quantity_max?: number | null;
                                /**
                                 * @description The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                                 *
                                 * @example price
                                 * @enum {string}
                                 */
                                readonly type?: "fixed" | "price" | "percent";
                                /**
                                 * Format: double
                                 * @description The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                                 *
                                 * @example 3
                                 */
                                readonly amount?: number;
                            }[];
                            /**
                             * @description The SKU code associated with this `Price Record` if requested and it exists.
                             *
                             * @example SMB-123
                             */
                            readonly sku?: string;
                        })[];
                        /**
                         * Collection Meta
                         * @description 'Contains data about paginating the response via cursors. If no pagination details are specified or if you only provide a limit, then both properties will be present. When a 'before' or 'after' cursor is provided, only the 'cursor_pagination' property will be present. When a 'page' parameter is provided, only the offset based 'pagination' property will be present.'
                         */
                        readonly meta?: {
                            /**
                             * Pagination
                             * @description Data about the response, including pagination and collection totals.
                             */
                            readonly pagination?: {
                                /**
                                 * @description Total number of items in the result set.
                                 *
                                 * @example 36
                                 */
                                readonly total?: number;
                                /**
                                 * @description Total number of items in the collection response.
                                 *
                                 * @example 36
                                 */
                                readonly count?: number;
                                /**
                                 * @description The amount of items returned in the collection per page, controlled by the limit parameter.
                                 *
                                 * @example 50
                                 */
                                readonly per_page?: number;
                                /**
                                 * @description The page you are currently on within the collection.
                                 *
                                 * @example 1
                                 */
                                readonly current_page?: number;
                                /**
                                 * @description The total number of pages in the collection.
                                 *
                                 * @example 1
                                 */
                                readonly total_pages?: number;
                            };
                            /** Cursor Pagination */
                            readonly cursor_pagination?: {
                                /**
                                 * Format: int32
                                 * @description Total number of items in the collection response.
                                 */
                                readonly count?: number;
                                /**
                                 * Format: int32
                                 * @description The number of items that can be returned per page, determined by the limit parameter—whether explicitly set, defaulted, or capped at the maximum limit.
                                 */
                                readonly per_page?: number;
                                /** @description A string representing the starting point of the current page in the collection. */
                                readonly start_cursor?: string;
                                /** @description A string representing the ending point of the current page in the collection. */
                                readonly end_cursor?: string;
                                /**
                                 * links
                                 * @description Pagination links for the previous and next parts of the whole collection.
                                 */
                                readonly links?: {
                                    /** @description Link to the previous page returned in the response. */
                                    readonly previous?: string;
                                    /** @description Link to the current page returned in the response. */
                                    readonly current?: string;
                                    /** @description Link to the next page returned in the response. */
                                    readonly next?: string;
                                };
                            };
                        };
                    };
                };
            };
            /** @description Allowed number of requests exceeded.
             *      */
            readonly 429: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["ErrorResponse"];
                    readonly examples: unknown;
                };
            };
        };
    };
    readonly upsertPriceListRecords: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                readonly "Content-Type"?: components["parameters"]["ContentType"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: number;
            };
            readonly cookie?: never;
        };
        readonly requestBody: {
            readonly content: {
                readonly "application/json": readonly ({
                    /**
                     * @description The variant ID with which this price set is associated. Either `variant_id` or `sku` is required.
                     *
                     * @example 331
                     */
                    readonly variant_id?: number;
                    /**
                     * @description The SKU for the variant with which this price set is associated. Either `sku` or `variant_id` is required.
                     *
                     * @example SMB-123
                     */
                    readonly sku?: string;
                    /**
                     * Format: ISO-4217
                     * @description The 3-letter currency code with which this price set is associated.
                     *
                     * @example usd
                     */
                    readonly currency?: string;
                } & {
                    /**
                     * Format: double
                     * @description The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                     *
                     * @example 3.99
                     */
                    readonly price?: number;
                    /**
                     * Format: double
                     * @description The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                     *
                     * @example 3.49
                     */
                    readonly sale_price?: number;
                    /**
                     * Format: double
                     * @description The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product. If empty, the retail price will be treated as not being set on this variant.
                     *
                     * @example 4.99
                     */
                    readonly retail_price?: number;
                    /**
                     * Format: double
                     * @description The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                     *
                     * @example 2.5
                     */
                    readonly map_price?: number;
                    readonly bulk_pricing_tiers?: readonly {
                        /**
                         * @description The minimum quantity of associated variant in the cart needed to qualify for the pricing of this tier.
                         *
                         * @example 1
                         */
                        readonly quantity_min?: number;
                        /**
                         * @description The maximum allowed quantity of associated variant in the cart to qualify for the pricing of this tier.
                         *
                         * @example 10
                         */
                        readonly quantity_max?: number;
                        /**
                         * @description The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                         *
                         * @example price
                         * @enum {string}
                         */
                        readonly type?: "fixed" | "price" | "percent";
                        /**
                         * Format: double
                         * @description The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                         *
                         * @example 3
                         */
                        readonly amount?: number;
                    }[];
                    /**
                     * @description The SKU code associated with this `Price Record` if requested and it exists.
                     *
                     * @example SMB-123
                     */
                    readonly sku?: string;
                })[];
            };
        };
        readonly responses: {
            /** @description Success response for batch PUT requests of Price Records. */
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        readonly data?: Record<string, unknown>;
                        readonly meta?: Record<string, unknown>;
                    };
                };
            };
            /** @description Error response for batch PUT of `Price Records`. May include errors during partial update in non-strict mode. */
            readonly 422: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        readonly batch_errors?: readonly {
                            /**
                             * Price Record Identifiers
                             * @description Price Record object used in batch create or update.
                             */
                            readonly data?: {
                                /**
                                 * @description The Price List with which this price set is associated.
                                 *
                                 * @example 2
                                 */
                                readonly price_list_id?: number;
                                /**
                                 * @description The variant ID with which this price set is associated. Either `variant_id` or `sku` is required.
                                 *
                                 * @example 325
                                 */
                                readonly variant_id?: number;
                                /** @description The variant with which this price set is associated. Either `sku` or `variant_id` is required.
                                 *      */
                                readonly sku?: string;
                                /**
                                 * Format: ISO-4217
                                 * @description The 3-letter currency code with which this price set is associated.
                                 *
                                 * @example usd
                                 */
                                readonly currency?: string;
                            };
                            /** Detailed Errors */
                            readonly field_errors?: {
                                readonly [key: string]: unknown;
                            };
                        }[];
                    };
                };
            };
            /** @description Allowed number of requests exceeded.
             *      */
            readonly 429: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["ErrorResponse"];
                    readonly examples: unknown;
                };
            };
        };
    };
    readonly deletePriceListRecords: {
        readonly parameters: {
            readonly query?: {
                /** @description The 3-letter currency code with which this set of prices is associated. */
                readonly currency?: string;
                /** @description A comma-separated list of IDs for one or more variants for which prices exist. */
                readonly "variant_id:in"?: readonly number[];
                /** @description A comma-separated list of SKUs for one or more variants for which prices exist. */
                readonly "sku:in"?: readonly string[];
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: number;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 204: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /** @description 204 HTTP status code.
                         *      */
                        readonly status?: number;
                        /** @description The error title describing the situation. */
                        readonly title?: string;
                        readonly type?: string;
                        readonly instance?: string;
                    };
                };
            };
        };
    };
    readonly getPriceListRecordsByVariantId: {
        readonly parameters: {
            readonly query?: {
                /** @description Sub-resources to include on a price record, in a comma-separated list. Valid expansions currently include `bulk_pricing_tiers` and `sku`. Other values will be ignored.
                 *      */
                readonly include?: readonly ("bulk_pricing_tiers" | "sku")[];
                /** @description Specifies the page number in a limited (paginated) list of products. */
                readonly page?: number;
                /** @description Controls the number of items per page in a limited (paginated) list of products. If you provide only a limit, the API returns both paginations while applying that limit. */
                readonly limit?: number;
                /** @description A cursor that can be used for backwards pagination. Will fetch results before the position corresponding to the cursor. Cannot be used with the 'page' query parameter. Cannot be used with the 'after' query parameter. */
                readonly before?: string;
                /** @description A cursor that can be used for forwards pagination. Will fetch results after the position corresponding to the cursor. Cannot be used with the 'page' query parameter. Cannot be used with the 'before' query parameter. */
                readonly after?: string;
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: number;
                /** @description ID of the variant on a product, or on an associated Price List Record.
                 *      */
                readonly variant_id: number;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        readonly data?: readonly ({
                            /**
                             * Format: double
                             * @description The price of the variant as seen on the storefront if a price record is in effect. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`. Read only.
                             *
                             * @example 24.64
                             */
                            readonly calculated_price?: number;
                            /**
                             * Format: date-time
                             * @description The date on which the Price entry was created.
                             *
                             * @example 2022-08-23T19:59:23Z
                             */
                            readonly date_created?: string;
                            /**
                             * Format: date-time
                             * @description The date on which the Price entry was created.
                             *
                             * @example 2022-08-23T19:59:23Z
                             */
                            readonly date_modified?: string;
                            /**
                             * @description The ID of the `Product` this `Price Record`ʼs `variant_id` is associated with. Read only.
                             *
                             * @example 158
                             */
                            readonly product_id?: number;
                        } & {
                            /**
                             * @description The Price List with which this price set is associated.
                             *
                             * @example 2
                             */
                            readonly price_list_id?: number;
                            /**
                             * @description The variant ID with which this price set is associated. Either `variant_id` or `sku` is required.
                             *
                             * @example 325
                             */
                            readonly variant_id?: number;
                            /** @description The variant ID with which this price set is associated. Either `sku` or `variant_id` is required.
                             *      */
                            readonly sku?: string;
                            /**
                             * @description The 3-letter currency code with which this price set is associated.
                             *
                             * @example usd
                             */
                            readonly currency?: string;
                        } & {
                            /**
                             * Format: double
                             * @description The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                             *
                             * @example 3.99
                             */
                            readonly price?: number;
                            /**
                             * Format: double
                             * @description The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                             *
                             * @example 5.99
                             */
                            readonly sale_price?: number;
                            /**
                             * Format: double
                             * @description The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product. If empty, the retail price will be treated as not being set on this variant.
                             *
                             * @example 6.99
                             */
                            readonly retail_price?: number;
                            /**
                             * Format: double
                             * @description The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                             *
                             * @example 5.99
                             */
                            readonly map_price?: number;
                            readonly bulk_pricing_tiers?: readonly {
                                /**
                                 * @description The minimum quantity of associated variant in the cart needed to qualify for this tiers pricing.
                                 *
                                 * @example 1
                                 */
                                readonly quantity_min?: number;
                                /**
                                 * @description The maximum allowed quantity of associated variant in the cart to qualify for this tiers pricing.
                                 *
                                 * @example 10
                                 */
                                readonly quantity_max?: number;
                                /**
                                 * @description The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                                 *
                                 * @example price
                                 * @enum {string}
                                 */
                                readonly type?: "fixed" | "price" | "percent";
                                /**
                                 * Format: double
                                 * @description The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                                 *
                                 * @example 3
                                 */
                                readonly amount?: number;
                            }[];
                            /**
                             * @description The SKU code associated with this `Price Record` if requested and it exists.
                             *
                             * @example SMB-123
                             */
                            readonly sku?: string;
                        })[];
                        /**
                         * Collection Meta
                         * @description 'Contains data about paginating the response via cursors. If no pagination details are specified or if you only provide a limit, then both properties will be present. When a 'before' or 'after' cursor is provided, only the 'cursor_pagination' property will be present. When a 'page' parameter is provided, only the offset based 'pagination' property will be present.'
                         */
                        readonly meta?: {
                            /**
                             * Pagination
                             * @description Data related to the response, including pagination and collection totals.
                             */
                            readonly pagination?: {
                                /**
                                 * @description Total number of items in the result set.
                                 *
                                 * @example 36
                                 */
                                readonly total?: number;
                                /**
                                 * @description Total number of items in the collection response.
                                 *
                                 * @example 36
                                 */
                                readonly count?: number;
                                /**
                                 * @description The amount of items returned in the collection per page, controlled by the limit parameter.
                                 *
                                 * @example 50
                                 */
                                readonly per_page?: number;
                                /**
                                 * @description The page you are currently on within the collection.
                                 *
                                 * @example 1
                                 */
                                readonly current_page?: number;
                                /**
                                 * @description The total number of pages in the collection.
                                 *
                                 * @example 1
                                 */
                                readonly total_pages?: number;
                            };
                            /**
                             * Cursor Pagination
                             * @description Data about cursor pagination.
                             */
                            readonly cursor_pagination?: {
                                /**
                                 * Format: int32
                                 * @description Total number of items in the collection response.
                                 */
                                readonly count?: number;
                                /**
                                 * Format: int32
                                 * @description The number of items that can be returned per page, determined by the limit parameter—whether explicitly set, defaulted, or capped at the maximum limit.
                                 */
                                readonly per_page?: number;
                                /** @description A string representing the starting point of the current page in the collection. */
                                readonly start_cursor?: string;
                                /** @description A string representing the ending point of the current page in the collection. */
                                readonly end_cursor?: string;
                                /**
                                 * links
                                 * @description Pagination links for the previous and next parts of the whole collection.
                                 */
                                readonly links?: {
                                    /** @description Link to the previous page returned in the response. */
                                    readonly previous?: string;
                                    /** @description Link to the current page returned in the response. */
                                    readonly current?: string;
                                    /** @description Link to the next page returned in the response. */
                                    readonly next?: string;
                                };
                            };
                        };
                    };
                };
            };
            /** @description Allowed number of requests exceeded.
             *      */
            readonly 429: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["ErrorResponse"];
                    readonly examples: unknown;
                };
            };
        };
    };
    readonly getPriceListRecord: {
        readonly parameters: {
            readonly query?: {
                /** @description Sub-resources to include on a price record, in a comma-separated list. Valid expansions currently include `bulk_pricing_tiers` and `sku`. Other values will be ignored.
                 *      */
                readonly include?: readonly ("bulk_pricing_tiers" | "sku")[];
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: number;
                /** @description ID of the variant on a product, or on an associated Price List Record.
                 *      */
                readonly variant_id: number;
                /** @description The currency code associated with the price record being acted upon.
                 *      */
                readonly currency_code: string;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "data": {
                     *         "price_list_id": 4,
                     *         "variant_id": 356,
                     *         "price": 22.544,
                     *         "sale_price": 22.544,
                     *         "retail_price": 22.544,
                     *         "map_price": 22.544,
                     *         "calculated_price": 22.544,
                     *         "date_created": "2022-09-18T13:18:15Z",
                     *         "date_modified": "2022-09-18T13:18:15Z",
                     *         "currency": "eur",
                     *         "product_id": 185
                     *       }
                     *     } */
                    readonly "application/json": {
                        /**
                         * Price Record
                         * @description The Price Record object.
                         */
                        readonly data?: {
                            /**
                             * Format: double
                             * @description The price of the variant as seen on the storefront if a price record is in effect. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`. Read only.
                             *
                             * @example 24.64
                             */
                            readonly calculated_price?: number;
                            /**
                             * Format: date-time
                             * @description The date on which the Price entry was created.
                             *
                             * @example 2022-08-23T19:59:23Z
                             */
                            readonly date_created?: string;
                            /**
                             * Format: date-time
                             * @description The date on which the Price entry was created.
                             *
                             * @example 2022-08-23T19:59:23Z
                             */
                            readonly date_modified?: string;
                            /**
                             * @description The ID of the `Product` this `Price Record`ʼs `variant_id` is associated with. Read only.
                             *
                             * @example 158
                             */
                            readonly product_id?: number;
                        } & {
                            /**
                             * @description The Price List with which this price set is associated.
                             *
                             * @example 2
                             */
                            readonly price_list_id?: number;
                            /**
                             * @description The variant with which this price set is associated. Either `variant_id` or `sku` is required.
                             *
                             * @example 325
                             */
                            readonly variant_id?: number;
                            /** @description The variant with which this price set is associated. Either `sku` or `variant_id` is required.
                             *      */
                            readonly sku?: string;
                            /**
                             * Format: ISO-4217
                             * @description The 3-letter currency code with which this price set is associated.
                             *
                             * @example usd
                             */
                            readonly currency?: string;
                        } & {
                            /**
                             * Format: double
                             * @description The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                             *
                             * @example 3.99
                             */
                            readonly price?: number;
                            /**
                             * Format: double
                             * @description The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                             *
                             */
                            readonly sale_price?: number;
                            /**
                             * Format: double
                             * @description The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product. If empty, the retail price will be treated as not being set on this variant.
                             *
                             */
                            readonly retail_price?: number;
                            /**
                             * Format: double
                             * @description The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                             *
                             */
                            readonly map_price?: number;
                            readonly bulk_pricing_tiers?: readonly {
                                /**
                                 * @description The minimum quantity of associated variant in the cart needed to qualify for the pricing of this tier.
                                 *
                                 * @example 1
                                 */
                                readonly quantity_min?: number;
                                /**
                                 * @description The maximum allowed quantity of associated variant in the cart to qualify for the pricing of this tier.
                                 *
                                 * @example 10
                                 */
                                readonly quantity_max?: number;
                                /**
                                 * @description The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                                 *
                                 * @example price
                                 * @enum {string}
                                 */
                                readonly type?: "fixed" | "price" | "percent";
                                /**
                                 * Format: double
                                 * @description The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                                 *
                                 * @example 3
                                 */
                                readonly amount?: number;
                            }[];
                            /**
                             * @description The SKU code associated with this `Price Record` if requested and it exists.
                             *
                             * @example SMB-123
                             */
                            readonly sku?: string;
                        };
                        readonly meta?: components["schemas"]["Meta"];
                    };
                };
            };
            /** @description Allowed number of requests exceeded.
             *      */
            readonly 429: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["ErrorResponse"];
                    readonly examples: unknown;
                };
            };
        };
    };
    readonly setPriceListRecord: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                readonly "Content-Type"?: components["parameters"]["ContentType"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: number;
                /** @description ID of the variant on a product, or on an associated Price List Record.
                 *      */
                readonly variant_id: number;
                /** @description The currency code associated with the price record being acted upon.
                 *      */
                readonly currency_code: string;
            };
            readonly cookie?: never;
        };
        readonly requestBody: {
            readonly content: {
                readonly "application/json": {
                    /**
                     * Format: double
                     * @description The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                     *
                     * @example 3.99
                     */
                    readonly price?: number;
                    /**
                     * Format: double
                     * @description The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                     *
                     */
                    readonly sale_price?: number;
                    /**
                     * Format: double
                     * @description The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product.  If empty, the retail price will be treated as not being set on this variant.
                     *
                     */
                    readonly retail_price?: number;
                    /**
                     * Format: double
                     * @description The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                     *
                     */
                    readonly map_price?: number;
                    readonly bulk_pricing_tiers?: readonly {
                        /**
                         * @description The minimum quantity of associated variant in the cart needed to qualify for this tiers pricing.
                         *
                         * @example 1
                         */
                        readonly quantity_min?: number;
                        /**
                         * @description The maximum allowed quantity of associated variant in the cart to qualify for this tiers pricing.
                         *
                         * @example 10
                         */
                        readonly quantity_max?: number;
                        /**
                         * @description The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                         *
                         * @example price
                         * @enum {string}
                         */
                        readonly type?: "fixed" | "price" | "percent";
                        /**
                         * Format: double
                         * @description The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                         *
                         * @example 3
                         */
                        readonly amount?: number;
                    }[];
                };
            };
        };
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /**
                         * Price Record
                         * @description The Price Record object.
                         */
                        readonly data?: {
                            /**
                             * Format: double
                             * @description The price of the variant as seen on the storefront if a price record is in effect. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`. Read only.
                             *
                             * @example 24.64
                             */
                            readonly calculated_price?: number;
                            /**
                             * Format: date-time
                             * @description The date on which the Price entry was created.
                             *
                             * @example 2018-08-23T19:59:23Z
                             */
                            readonly date_created?: string;
                            /**
                             * Format: date-time
                             * @description The date on which the Price entry was created.
                             *
                             * @example 2018-08-23T19:59:23Z
                             */
                            readonly date_modified?: string;
                            /**
                             * @description The ID of the `Product` this `Price Record`ʼs `variant_id` is associated with. Read only.
                             *
                             * @example 158
                             */
                            readonly product_id?: number;
                        } & {
                            /**
                             * @description The Price List with which this price set is associated.
                             *
                             * @example 2
                             */
                            readonly price_list_id?: number;
                            /**
                             * @description The variant with which this price set is associated. Either `variant_id` or `sku` is required.
                             *
                             * @example 325
                             */
                            readonly variant_id?: number;
                            /**
                             * Format: ISO-4217
                             * @description The 3-letter currency code with which this price set is associated.
                             *
                             * @example usd
                             */
                            readonly currency?: string;
                        } & {
                            /**
                             * Format: double
                             * @description The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
                             *
                             * @example 3.99
                             */
                            readonly price?: number;
                            /**
                             * Format: double
                             * @description The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
                             *
                             */
                            readonly sale_price?: number;
                            /**
                             * Format: double
                             * @description The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product.  If empty, the retail price will be treated as not being set on this variant.
                             *
                             */
                            readonly retail_price?: number;
                            /**
                             * Format: double
                             * @description The MAP (Minimum Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
                             *
                             */
                            readonly map_price?: number;
                            readonly bulk_pricing_tiers?: readonly {
                                /**
                                 * @description The minimum quantity of associated variant in the cart needed to qualify for the pricing of this tier.
                                 *
                                 * @example 1
                                 */
                                readonly quantity_min?: number;
                                /**
                                 * @description The maximum allowed quantity of associated variant in the cart to qualify for the pricing of this tier.
                                 *
                                 * @example 10
                                 */
                                readonly quantity_max?: number;
                                /**
                                 * @description The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
                                 *
                                 * @example price
                                 * @enum {string}
                                 */
                                readonly type?: "fixed" | "price" | "percent";
                                /**
                                 * Format: double
                                 * @description The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
                                 *
                                 * @example 3
                                 */
                                readonly amount?: number;
                            }[];
                        };
                        readonly meta?: components["schemas"]["Meta"];
                    };
                };
            };
            /** @description The resource was not found.
             *      */
            readonly 404: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /** @description 404 HTTP status code.
                         *      */
                        readonly status?: number;
                        /** @description The error title describing the particular error. */
                        readonly title?: string;
                        readonly type?: string;
                        readonly instance?: string;
                    };
                };
            };
            /** @description `Price Record` was in conflict with another price record. This is the result of duplicate unique values.
             *      */
            readonly 409: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /** Detailed Errors */
                        readonly errors?: {
                            readonly [key: string]: unknown;
                        };
                        readonly instance?: string;
                        /** @description The HTTP status code.
                         *      */
                        readonly status?: number;
                        /** @description The error title describing the particular error.
                         *      */
                        readonly title?: string;
                        readonly type?: string;
                    };
                };
            };
            /** @description `Price Record` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
             *      */
            readonly 422: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": {
                        /** Detailed Errors */
                        readonly errors?: {
                            readonly [key: string]: unknown;
                        };
                        readonly instance?: string;
                        /** @description The HTTP status code.
                         *      */
                        readonly status?: number;
                        /** @description The error title describing the particular error.
                         *      */
                        readonly title?: string;
                        readonly type?: string;
                    };
                };
            };
            /** @description Allowed number of requests exceeded.
             *      */
            readonly 429: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["ErrorResponse"];
                    readonly examples: unknown;
                };
            };
        };
    };
    readonly deletePriceListRecord: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: number;
                /** @description ID of the variant on a product, or on an associated Price List Record.
                 *      */
                readonly variant_id: number;
                /** @description The currency code associated with the price record being acted upon.
                 *      */
                readonly currency_code: string;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 204: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    readonly getListOfPriceListAssignments: {
        readonly parameters: {
            readonly query?: {
                /** @description The ID of the `Price List Assignment`. */
                readonly id?: number;
                /** @description The ID of the `Price List`. */
                readonly price_list_id?: number;
                /** @description The ID of the `Customer Group`. */
                readonly customer_group_id?: number;
                /** @description The ID of the `Channel`. */
                readonly channel_id?: number;
                /** @description Filter items by a comma-separated list of IDs. */
                readonly "id:in"?: readonly number[];
                /** @description Filter items by a comma-separated list of customer group IDs. */
                readonly "customer_group_id:in"?: readonly number[];
                /** @description Filter items by a comma-separated list of price list IDs. */
                readonly "price_list_id:in"?: readonly number[];
                /** @description Filter items by a comma-separated list of channel IDs. */
                readonly "channel_id:in"?: readonly number[];
                /** @description Specifies the page number in a limited (paginated) list of products. */
                readonly page?: number;
                /** @description Controls the number of items per page in a limited (paginated) list of products. If you provide only a limit, the API returns both paginations while applying that limit. */
                readonly limit?: number;
                /** @description A cursor that can be used for backwards pagination. Will fetch results before the position corresponding to the cursor. Cannot be used with the 'page' query parameter. Cannot be used with the 'after' query parameter. */
                readonly before?: string;
                /** @description A cursor that can be used for forwards pagination. Will fetch results after the position corresponding to the cursor. Cannot be used with the 'page' query parameter. Cannot be used with the 'before' query parameter. */
                readonly after?: string;
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            /** @description An array of price list assignments and metadata. */
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["AssignmentsForGetResponse"];
                };
            };
        };
    };
    readonly createPriceListAssignments: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                readonly "Content-Type"?: components["parameters"]["ContentType"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody: {
            readonly content: {
                readonly "application/json": components["schemas"]["CreateBatchPriceListAssignmentsRequest"];
            };
        };
        readonly responses: {
            /** @description No content */
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Error response. Includes the errors for each reference ID. */
            readonly 422: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["PriceListAssignmentsBatchErrorResponse"];
                };
            };
        };
    };
    readonly deletePriceListAssignments: {
        readonly parameters: {
            readonly query?: {
                /** @description The ID of the `Price List Assignment`. */
                readonly id?: components["parameters"]["FilterAssignmentIdParam"];
                /** @description The ID of the `Price List`. */
                readonly price_list_id?: components["parameters"]["FilterPriceListIdParam"];
                /** @description The ID of the `Customer Group`. */
                readonly customer_group_id?: components["parameters"]["FilterCustomerGroupIdParam"];
                /** @description The ID of the `Channel`. */
                readonly channel_id?: components["parameters"]["FilterChannelIdParam"];
                /** @description Filter results by a comma-separated list of channel IDs. */
                readonly "channel_id:in"?: components["parameters"]["ChannelIdInParam"];
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            /** @description No Content. */
            readonly 204: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    readonly upsertPriceListAssignment: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                readonly "Content-Type"?: components["parameters"]["ContentType"];
            };
            readonly path: {
                /** @description The ID of the `Price List` requested.
                 *      */
                readonly price_list_id: components["parameters"]["PriceListIdParam"];
            };
            readonly cookie?: never;
        };
        readonly requestBody: {
            readonly content: {
                readonly "application/json": components["schemas"]["AssignmentForPutRequest"];
            };
        };
        readonly responses: {
            /** @description A price list assignment. */
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["AssignmentForPutResponse"];
                };
            };
            /** @description A matching customer group or channel wasnʼt found, so no assignment is created or returned. */
            readonly 404: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
