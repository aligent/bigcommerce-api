/**
 * This file was auto-generated by openapi-typescript and ts-morph.
 * Do not make direct changes to the file.
 */

export interface paths {
    readonly "/content/page-widgets": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
                /**
                 * @description Please specify a user agent to identify your integration or client.
                 * @example PostmanRuntime/7.32.3
                 */
                readonly "User-Agent": components["parameters"]["User-Agent"];
                /** @description An identifier unique to a set of related requests. For use on headless storefronts, excluding BigCommerce for WordPress. For more information, see [Best Practices](/docs/start/best-practices#correlating-requests) or the [Headless Guide](/docs/storefront/headless#correlating-requests). */
                readonly "X-Correlation-Id"?: components["parameters"]["X-Correlation-Id"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get a page snapshot
         * @description Get a snapshot of all the page widget regions for a given channel, template file, or entity.
         */
        readonly get: operations["getPageWidgets"];
        /**
         * Publish or overwrite page content
         * @description Publish or overwrite the content of a page that uses page widgets.
         */
        readonly post: operations["createPageWidgets"];
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Publish or overwrite request
         * @example {
         *       "template_file": "pages/page",
         *       "entity_id": "5",
         *       "channel_id": 1,
         *       "regions": [
         *         {
         *           "name": "home_below_menu",
         *           "children": [
         *             {
         *               "widget_template_uuid": "d181ebd5-f42c-4f96-8f9d-c605023f5cb6",
         *               "configuration": {
         *                 "title": "Hero Banner Title",
         *                 "subtitle": "Add a description for this hero banner. This is a great place to highlight a promotion.",
         *                 "buttonText": "Shop now",
         *                 "contentAlignment": {
         *                   "horizontal": "left"
         *                 },
         *                 "containerHeight": "small",
         *                 "backgroundType": "image",
         *                 "backgroundColor": "#444444",
         *                 "imageUrl": {
         *                   "src": "https://images.unsplash.com/photo-1533038590840-1cde6e668a91?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2000&q=100",
         *                   "type": "IMAGE_MANAGER"
         *                 },
         *                 "imageFit": "fill",
         *                 "imageParallax": "off",
         *                 "imageAlignment": {
         *                   "horizontal": "center",
         *                   "vertical": "middle"
         *                 },
         *                 "imageOpacity": 100,
         *                 "titleVisible": "show",
         *                 "titleStyle": "default",
         *                 "titleFontFamily": "inherit",
         *                 "titleFontWeight": "400",
         *                 "titleFontSize": {
         *                   "value": 36,
         *                   "type": "px"
         *                 },
         *                 "descriptionVisible": "show",
         *                 "descriptionStyle": "default",
         *                 "descriptionFontFamily": "inherit",
         *                 "descriptionFontWeight": "400",
         *                 "descriptionFontSize": {
         *                   "value": 21,
         *                   "type": "px"
         *                 },
         *                 "textColor": "#444444",
         *                 "mobileTextColor": "#444444",
         *                 "buttonVisible": "show",
         *                 "buttonFont": "default",
         *                 "buttonFontFamily": "inherit",
         *                 "buttonStyle": "round",
         *                 "buttonColor": "#444444",
         *                 "mobileButtonColor": "#444444",
         *                 "buttonTextColor": "rgba(255,255,255,1)",
         *                 "mobileButtonTextColor": "rgba(255,255,255,1)"
         *               },
         *               "storefront_api_query_params": {},
         *               "name": "Hero Banner",
         *               "description": "",
         *               "type": "widget"
         *             }
         *           ]
         *         },
         *         {
         *           "name": "header_bottom",
         *           "children": [
         *             {
         *               "layout_template_uuid": "7d42d0b1-1152-4ce3-a6c1-3709f786f295",
         *               "configuration": {
         *                 "columnWeights": [
         *                   "33.333333%",
         *                   "33.333333%",
         *                   "33.333333%"
         *                 ],
         *                 "layoutBackgroundColor": "rgba(0,0,0,0)",
         *                 "layoutBackgroundImageAlignment": {
         *                   "horizontal": "center",
         *                   "vertical": "middle"
         *                 },
         *                 "layoutBackgroundImageFit": "fill",
         *                 "layoutBackgroundImageOpacity": 100,
         *                 "layoutBackgroundImageUrl": "",
         *                 "layoutBorderColor": "#333333",
         *                 "layoutBorderStyle": "solid",
         *                 "layoutBorderThickness": 0,
         *                 "layoutHeight": "",
         *                 "layoutMargin": {
         *                   "bottom": {
         *                     "type": "px",
         *                     "value": "0"
         *                   },
         *                   "left": {
         *                     "type": "px",
         *                     "value": "0"
         *                   },
         *                   "right": {
         *                     "type": "px",
         *                     "value": "0"
         *                   },
         *                   "top": {
         *                     "type": "px",
         *                     "value": "0"
         *                   }
         *                 },
         *                 "layoutPadding": {
         *                   "bottom": {
         *                     "type": "px",
         *                     "value": "0"
         *                   },
         *                   "left": {
         *                     "type": "px",
         *                     "value": "0"
         *                   },
         *                   "right": {
         *                     "type": "px",
         *                     "value": "0"
         *                   },
         *                   "top": {
         *                     "type": "px",
         *                     "value": "0"
         *                   }
         *                 },
         *                 "numberOfDropzones": 3,
         *                 "layoutBackgroundType": "",
         *                 "layoutZIndex": "auto",
         *                 "name": "Layout"
         *               },
         *               "name": "Layout",
         *               "dropzones": [
         *                 {
         *                   "configuration": {
         *                     "dropzoneBackgroundColor": "rgba(0,0,0,0)",
         *                     "dropzoneBackgroundImageAlignment": {
         *                       "horizontal": "center",
         *                       "vertical": "middle"
         *                     },
         *                     "dropzoneBackgroundImageFit": "fill",
         *                     "dropzoneBackgroundImageOpacity": 100,
         *                     "dropzoneBackgroundImageUrl": "",
         *                     "dropzoneBorderColor": "#333333",
         *                     "dropzoneBorderStyle": "solid",
         *                     "dropzoneBorderThickness": 0,
         *                     "dropzoneHeight": "",
         *                     "dropzoneJustifyContent": "center",
         *                     "dropzoneMargin": {
         *                       "bottom": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "left": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "right": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "top": {
         *                         "type": "px",
         *                         "value": "0"
         *                       }
         *                     },
         *                     "dropzonePadding": {
         *                       "bottom": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "left": {
         *                         "type": "px",
         *                         "value": "10.5"
         *                       },
         *                       "right": {
         *                         "type": "px",
         *                         "value": "10.5"
         *                       },
         *                       "top": {
         *                         "type": "px",
         *                         "value": "0"
         *                       }
         *                     },
         *                     "dropzoneZIndex": "auto",
         *                     "dropzoneBackgroundType": ""
         *                   },
         *                   "widgets": [
         *                     {
         *                       "widget_template_uuid": "e59c1412-2d85-4f18-ab4b-8a55412d945c",
         *                       "configuration": {
         *                         "productCardContentAlignment": {
         *                           "horizontal": "center"
         *                         },
         *                         "productImage": {
         *                           "visibility": "show",
         *                           "imageFit": "fill"
         *                         },
         *                         "brand": {
         *                           "visibility": "show",
         *                           "textStyle": "default",
         *                           "color": "#444444"
         *                         },
         *                         "productName": {
         *                           "visibility": "show",
         *                           "textStyle": "default",
         *                           "color": "#444444"
         *                         },
         *                         "price": {
         *                           "visibility": "show",
         *                           "textStyle": "default",
         *                           "color": "#444444"
         *                         },
         *                         "productRating": {
         *                           "visibility": "hide",
         *                           "starColorFilled": "#3C64F4",
         *                           "starColorEmpty": "#ECEEF5",
         *                           "reviewsColor": "#8C93AD"
         *                         },
         *                         "button": {
         *                           "visibility": "hide",
         *                           "shape": "round",
         *                           "buttonColor": "rgba(68,68,68,1)",
         *                           "textStyle": "default",
         *                           "buttonTextColor": "rgba(255,255,255,1)",
         *                           "buttonActionType": "addToCart"
         *                         },
         *                         "productId": "77"
         *                       },
         *                       "storefront_api_query_params": {
         *                         "productId": 77
         *                       },
         *                       "name": "Product",
         *                       "description": "",
         *                       "type": "widget"
         *                     }
         *                   ]
         *                 },
         *                 {
         *                   "configuration": {
         *                     "dropzoneBackgroundColor": "rgba(0,0,0,0)",
         *                     "dropzoneBackgroundImageAlignment": {
         *                       "horizontal": "center",
         *                       "vertical": "middle"
         *                     },
         *                     "dropzoneBackgroundImageFit": "fill",
         *                     "dropzoneBackgroundImageOpacity": 100,
         *                     "dropzoneBackgroundImageUrl": "",
         *                     "dropzoneBorderColor": "#333333",
         *                     "dropzoneBorderStyle": "solid",
         *                     "dropzoneBorderThickness": 0,
         *                     "dropzoneHeight": "",
         *                     "dropzoneJustifyContent": "center",
         *                     "dropzoneMargin": {
         *                       "bottom": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "left": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "right": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "top": {
         *                         "type": "px",
         *                         "value": "0"
         *                       }
         *                     },
         *                     "dropzonePadding": {
         *                       "bottom": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "left": {
         *                         "type": "px",
         *                         "value": "10.5"
         *                       },
         *                       "right": {
         *                         "type": "px",
         *                         "value": "10.5"
         *                       },
         *                       "top": {
         *                         "type": "px",
         *                         "value": "0"
         *                       }
         *                     },
         *                     "dropzoneZIndex": "auto",
         *                     "dropzoneBackgroundType": ""
         *                   },
         *                   "widgets": [
         *                     {
         *                       "widget_template_uuid": "e59c1412-2d85-4f18-ab4b-8a55412d945c",
         *                       "configuration": {
         *                         "productCardContentAlignment": {
         *                           "horizontal": "center"
         *                         },
         *                         "productImage": {
         *                           "visibility": "show",
         *                           "imageFit": "fill"
         *                         },
         *                         "brand": {
         *                           "visibility": "show",
         *                           "textStyle": "default",
         *                           "color": "#444444"
         *                         },
         *                         "productName": {
         *                           "visibility": "show",
         *                           "textStyle": "default",
         *                           "color": "#444444"
         *                         },
         *                         "price": {
         *                           "visibility": "show",
         *                           "textStyle": "default",
         *                           "color": "#444444"
         *                         },
         *                         "productRating": {
         *                           "visibility": "hide",
         *                           "starColorFilled": "#3C64F4",
         *                           "starColorEmpty": "#ECEEF5",
         *                           "reviewsColor": "#8C93AD"
         *                         },
         *                         "button": {
         *                           "visibility": "hide",
         *                           "shape": "round",
         *                           "buttonColor": "rgba(68,68,68,1)",
         *                           "textStyle": "default",
         *                           "buttonTextColor": "rgba(255,255,255,1)",
         *                           "buttonActionType": "addToCart"
         *                         },
         *                         "productId": "80"
         *                       },
         *                       "storefront_api_query_params": {
         *                         "productId": 80
         *                       },
         *                       "name": "Product",
         *                       "description": "",
         *                       "type": "widget"
         *                     }
         *                   ]
         *                 },
         *                 {
         *                   "configuration": {
         *                     "dropzoneBackgroundColor": "rgba(0,0,0,0)",
         *                     "dropzoneBackgroundImageAlignment": {
         *                       "horizontal": "center",
         *                       "vertical": "middle"
         *                     },
         *                     "dropzoneBackgroundImageFit": "fill",
         *                     "dropzoneBackgroundImageOpacity": 100,
         *                     "dropzoneBackgroundImageUrl": "",
         *                     "dropzoneBorderColor": "#333333",
         *                     "dropzoneBorderStyle": "solid",
         *                     "dropzoneBorderThickness": 0,
         *                     "dropzoneHeight": "",
         *                     "dropzoneJustifyContent": "center",
         *                     "dropzoneMargin": {
         *                       "bottom": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "left": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "right": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "top": {
         *                         "type": "px",
         *                         "value": "0"
         *                       }
         *                     },
         *                     "dropzonePadding": {
         *                       "bottom": {
         *                         "type": "px",
         *                         "value": "0"
         *                       },
         *                       "left": {
         *                         "type": "px",
         *                         "value": "10.5"
         *                       },
         *                       "right": {
         *                         "type": "px",
         *                         "value": "10.5"
         *                       },
         *                       "top": {
         *                         "type": "px",
         *                         "value": "0"
         *                       }
         *                     },
         *                     "dropzoneZIndex": "auto",
         *                     "dropzoneBackgroundType": ""
         *                   },
         *                   "widgets": [
         *                     {
         *                       "widget_template_uuid": "e59c1412-2d85-4f18-ab4b-8a55412d945c",
         *                       "configuration": {
         *                         "productCardContentAlignment": {
         *                           "horizontal": "center"
         *                         },
         *                         "productImage": {
         *                           "visibility": "show",
         *                           "imageFit": "fill"
         *                         },
         *                         "brand": {
         *                           "visibility": "show",
         *                           "textStyle": "default",
         *                           "color": "#444444"
         *                         },
         *                         "productName": {
         *                           "visibility": "show",
         *                           "textStyle": "default",
         *                           "color": "#444444"
         *                         },
         *                         "price": {
         *                           "visibility": "show",
         *                           "textStyle": "default",
         *                           "color": "#444444"
         *                         },
         *                         "productRating": {
         *                           "visibility": "hide",
         *                           "starColorFilled": "#3C64F4",
         *                           "starColorEmpty": "#ECEEF5",
         *                           "reviewsColor": "#8C93AD"
         *                         },
         *                         "button": {
         *                           "visibility": "hide",
         *                           "shape": "round",
         *                           "buttonColor": "rgba(68,68,68,1)",
         *                           "textStyle": "default",
         *                           "buttonTextColor": "rgba(255,255,255,1)",
         *                           "buttonActionType": "addToCart"
         *                         },
         *                         "productId": "93"
         *                       },
         *                       "storefront_api_query_params": {
         *                         "productId": 93
         *                       },
         *                       "name": "Product",
         *                       "description": "",
         *                       "type": "widget"
         *                     }
         *                   ]
         *                 }
         *               ],
         *               "type": "layout"
         *             }
         *           ]
         *         }
         *       ]
         *     }
         */
        readonly publish: {
            readonly regions: readonly components["schemas"]["region"][];
            /** @description The template file that you would like to target. Leave it empty if the request is for Global regions. */
            readonly template_file?: string;
            /** @description The identifier of a page you would like to target. For product pages, choose product ID. For category pages, choose category ID. Home page does not support `entity_id`. Leave it empty if the request is for Global regions. */
            readonly entity_id?: string;
            /**
             * @description The id of the channel on which to create this placement. Defaults to the first channel created on the store.
             * @example 1
             */
            readonly channel_id?: number;
        };
        /** Region object */
        readonly region: {
            /** @description Matches the name specified as `{{{region_name="..."}}}` in a theme template file. */
            readonly name?: string;
            /** @description Consists of layout and widget objects. */
            readonly children?: readonly (components["schemas"]["layout"] | components["schemas"]["widget"])[];
        };
        /** Layout object */
        readonly layout: {
            /**
             * Format: uuid
             * @description Set by BigCommerce. Read-only.
             */
            readonly layout_template_uuid?: string;
            /** @description JSON object of necessary configuration to construct a layout. */
            readonly configuration?: Record<string, unknown>;
            /** @description A human-readable label for the layout; displays in Page Builder. */
            readonly name?: string;
            /** @description Consists of dropzone objects. */
            readonly dropzones?: readonly components["schemas"]["dropzone"][];
            /**
             * @example layout
             * @enum {string}
             */
            readonly type?: "layout";
        };
        /** Dropzone object */
        readonly dropzone: {
            /** @description JSON object of necessary configuration to construct a dropzone. */
            readonly configuration?: Record<string, unknown>;
            /** @description Consists of [widget](#widgets) objects. */
            readonly widgets?: readonly components["schemas"]["widget"][];
        };
        /** Widget object */
        readonly widget: {
            /**
             * Format: uuid
             * @description The unique identifier of the parent widget template; set by the store or channel where the widget template originated.
             */
            readonly widget_template_uuid?: string;
            /** @description JSON object of necessary configuration to construct a widget. */
            readonly configuration?: Record<string, unknown>;
            /** @description A set of parameters used to query the GraphQL Storefront API. Used when the parent widget template is configured to request data directly from the GraphQL Storefront API; in this case, the parent widget template has the `storefront_api_query` property. */
            readonly storefront_api_query_params?: {
                readonly [key: string]: unknown;
            };
            /** @description A human-readable label for the widget. Retrievable using either the [Get a widget](/docs/rest-content/widgets/widget#get-a-widget) or the [Get all widgets](/docs/rest-content/widgets/widget#get-all-widgets) endpoint. */
            readonly name?: string;
            /** @description A description of the widget. Retrievable using either the [Get a widget](/docs/rest-content/widgets/widget#get-a-widget) or the [Get all widgets](/docs/rest-content/widgets/widget#get-all-widgets) endpoint. */
            readonly description?: string;
            /**
             * @example widget
             * @enum {string}
             */
            readonly type?: "widget";
        };
        /**
         * Meta object
         * @description Data about the response, including pagination and collection totals.
         */
        readonly metaCollection: {
            readonly pagination?: components["schemas"]["pagination"];
        };
        /**
         * Pagination object
         * @description Data about the response, including pagination and collection totals.
         *
         */
        readonly pagination: {
            /** @description Total number of items in the result set.
             *      */
            readonly total?: number;
            /** @description Total number of items in the collection response.
             *      */
            readonly count?: number;
            /** @description The amount of items returned in the collection per page, controlled by the limit parameter.
             *      */
            readonly per_page?: number;
            /** @description The page you are currently on within the collection.
             *      */
            readonly current_page?: number;
            /** @description The total number of pages in the collection.
             *      */
            readonly total_pages?: number;
            /** @description Pagination links for the previous and next parts of the whole collection.
             *      */
            readonly links?: {
                /** @description Link to the previous page returned in the response.
                 *      */
                readonly previous?: string;
                /** @description Link to the current page returned in the response.
                 *      */
                readonly current?: string;
                /** @description Link to the next page returned in the response.
                 *      */
                readonly next?: string;
            };
        };
        /** Error response */
        readonly ErrorResponse: components["schemas"]["BaseError"] & {
            readonly errors?: components["schemas"]["DetailedErrors"];
        };
        /**
         * Base error
         * @description Error payload for the BigCommerce API.
         *
         */
        readonly BaseError: {
            /** @description The HTTP status code.
             *      */
            readonly status?: number;
            /** @description The error title describing the particular error.
             *      */
            readonly title?: string;
            readonly type?: string;
            readonly instance?: string;
        };
        /** Detailed errors */
        readonly DetailedErrors: {
            readonly [key: string]: unknown;
        };
    };
    responses: {
        readonly GetPageSnapshot_Response: {
            headers: {
                readonly Date: components["headers"]["Date"];
                readonly "Last-Modified": components["headers"]["Last-Modified"];
                readonly "Content-Encoding": components["headers"]["Content-Encoding"];
                readonly "Transfer-Encoding": components["headers"]["Transfer-Encoding"];
                readonly "X-Rate-Limit-Time-Window-Ms": components["headers"]["X-Rate-Limit-Time-Window-Ms"];
                readonly "X-Rate-Limit-Time-Reset-Ms": components["headers"]["X-Rate-Limit-Time-Reset-Ms"];
                readonly "X-Rate-Limit-Requests-Quota": components["headers"]["X-Rate-Limit-Requests-Quota"];
                readonly "X-Rate-Limit-Requests-Left": components["headers"]["X-Rate-Limit-Requests-Left"];
                readonly "X-Retry-After": components["headers"]["X-Retry-After"];
                readonly "X-BC-ApiLimit-Remaining": components["headers"]["X-BC-ApiLimit-Remaining"];
                readonly "X-BC-Store-Version": components["headers"]["X-BC-Store-Version"];
                readonly [name: string]: unknown;
            };
            content: {
                readonly "application/json": {
                    readonly data?: {
                        readonly regions?: readonly components["schemas"]["region"][];
                    };
                    readonly meta?: components["schemas"]["metaCollection"];
                };
            };
        };
        /** @description Failure due to an invalid query parameter */
        readonly GetErrorResponse: {
            headers: {
                readonly Date: components["headers"]["Date"];
                readonly "Last-Modified": components["headers"]["Last-Modified"];
                readonly "Content-Encoding": components["headers"]["Content-Encoding"];
                readonly "Transfer-Encoding": components["headers"]["Transfer-Encoding"];
                readonly "X-Rate-Limit-Time-Window-Ms": components["headers"]["X-Rate-Limit-Time-Window-Ms"];
                readonly "X-Rate-Limit-Time-Reset-Ms": components["headers"]["X-Rate-Limit-Time-Reset-Ms"];
                readonly "X-Rate-Limit-Requests-Quota": components["headers"]["X-Rate-Limit-Requests-Quota"];
                readonly "X-Rate-Limit-Requests-Left": components["headers"]["X-Rate-Limit-Requests-Left"];
                readonly "X-Retry-After": components["headers"]["X-Retry-After"];
                readonly "X-BC-ApiLimit-Remaining": components["headers"]["X-BC-ApiLimit-Remaining"];
                readonly "X-BC-Store-Version": components["headers"]["X-BC-Store-Version"];
                readonly [name: string]: unknown;
            };
            content: {
                readonly "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description The request payload was invalid. */
        readonly CreateErrorResponse: {
            headers: {
                readonly Date: components["headers"]["Date"];
                readonly "Last-Modified": components["headers"]["Last-Modified"];
                readonly "Content-Encoding": components["headers"]["Content-Encoding"];
                readonly "Transfer-Encoding": components["headers"]["Transfer-Encoding"];
                readonly "X-Rate-Limit-Time-Window-Ms": components["headers"]["X-Rate-Limit-Time-Window-Ms"];
                readonly "X-Rate-Limit-Time-Reset-Ms": components["headers"]["X-Rate-Limit-Time-Reset-Ms"];
                readonly "X-Rate-Limit-Requests-Quota": components["headers"]["X-Rate-Limit-Requests-Quota"];
                readonly "X-Rate-Limit-Requests-Left": components["headers"]["X-Rate-Limit-Requests-Left"];
                readonly "X-Retry-After": components["headers"]["X-Retry-After"];
                readonly "X-BC-ApiLimit-Remaining": components["headers"]["X-BC-ApiLimit-Remaining"];
                readonly "X-BC-Store-Version": components["headers"]["X-BC-Store-Version"];
                readonly [name: string]: unknown;
            };
            content: {
                readonly "application/json": components["schemas"]["ErrorResponse"];
            };
        };
    };
    parameters: {
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
        readonly Accept: string;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
        readonly "Content-Type": string;
        /**
         * @description Please specify a user agent to identify your integration or client.
         * @example PostmanRuntime/7.32.3
         */
        readonly "User-Agent": string;
        /** @description An identifier unique to a set of related requests. For use on headless storefronts, excluding BigCommerce for WordPress. For more information, see [Best Practices](/docs/start/best-practices#correlating-requests) or the [Headless Guide](/docs/storefront/headless#correlating-requests). */
        readonly "X-Correlation-Id": string;
        /**
         * @description The ID of the channel for which you want to retrieve page widgets. Defaults to the first channel created on the store.
         * @example 12
         */
        readonly ChannelId: number;
        /** @description The template file that you would like to target. Leave it empty if the request is for Global regions. */
        readonly TemplateFile: string;
        /** @description The identifier of a page you would like to target. For product pages, choose product ID. For category pages, choose category ID. Home page does not support `entity_id`. Leave empty if the request is for global regions. */
        readonly EntityId: string;
    };
    requestBodies: {
        readonly PublishOrOverwrite_Request: {
            readonly content: {
                readonly "application/json": components["schemas"]["publish"];
            };
        };
    };
    headers: {
        /**
         * @description An [RFC 2822](a href="http://tools.ietf.org/html/rfc2822#section-3.3) date.
         * @example Tue, 15 Nov 2011 12:45:26 GMT
         */
        readonly Date: string;
        /**
         * @description An [RFC 2822](a href="http://tools.ietf.org/html/rfc2822#section-3.3) date. The date the resource was last modified.
         * @example Tue, 15 Nov 2011 12:45:26 GMT
         */
        readonly "Last-Modified": string;
        /**
         * @description Lets API clients request compressed responses.
         * @example gzip
         */
        readonly "Content-Encoding": "gzip";
        /**
         * @description Specifies the form of encoding used to transfer the resource.
         * @example chunked
         */
        readonly "Transfer-Encoding": string;
        /**
         * @description number | Shows the size of your current rate-limiting window, in milliseconds.
         * @example 30000
         */
        readonly "X-Rate-Limit-Time-Window-Ms": number;
        /**
         * @description Shows how many milliseconds are remaining in the window. In this case, 15000 milliseconds – so, 15000 milliseconds after this request, the API quota will be refreshed.
         * @example 15000
         */
        readonly "X-Rate-Limit-Time-Reset-Ms": number;
        /**
         * @description Shows how many API requests are allowed in the current window for your client.
         * @example 150
         */
        readonly "X-Rate-Limit-Requests-Quota": number;
        /**
         * @description Details how many remaining requests your client can make in the current window before being rate-limited. In this case, you would expect to be able to make 35 more requests in the next 15000 milliseconds; on the 36th request within 15000 milliseconds, you would be rate-limited and receive an HTTP 429 response.
         * @example 35
         */
        readonly "X-Rate-Limit-Requests-Left": number;
        /**
         * @description Rate limited response, indicating the number of seconds before the quota refreshes. See [Rate Limits](/docs/start/best-practices#api-rate-limits).
         * @example 15
         */
        readonly "X-Retry-After": number;
        /**
         * @description The number of API requests remaining for the current period (rolling one hour).
         * @example 987
         */
        readonly "X-BC-ApiLimit-Remaining": number;
        /**
         * @description The version of BigCommerce on which the store is running. This header is available on versions 7.3.6+.
         * @example 7.3.6
         */
        readonly "X-BC-Store-Version": string;
    };
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    readonly getPageWidgets: {
        readonly parameters: {
            readonly query?: {
                /**
                 * @description The ID of the channel for which you want to retrieve page widgets. Defaults to the first channel created on the store.
                 * @example 12
                 */
                readonly channel_id?: components["parameters"]["ChannelId"];
                /** @description The template file that you would like to target. Leave it empty if the request is for Global regions. */
                readonly template_file?: components["parameters"]["TemplateFile"];
                /** @description The identifier of a page you would like to target. For product pages, choose product ID. For category pages, choose category ID. Home page does not support `entity_id`. Leave empty if the request is for global regions. */
                readonly entity_id?: components["parameters"]["EntityId"];
            };
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /**
                 * @description Please specify a user agent to identify your integration or client.
                 * @example PostmanRuntime/7.32.3
                 */
                readonly "User-Agent": components["parameters"]["User-Agent"];
                /** @description An identifier unique to a set of related requests. For use on headless storefronts, excluding BigCommerce for WordPress. For more information, see [Best Practices](/docs/start/best-practices#correlating-requests) or the [Headless Guide](/docs/storefront/headless#correlating-requests). */
                readonly "X-Correlation-Id"?: components["parameters"]["X-Correlation-Id"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 200: components["responses"]["GetPageSnapshot_Response"];
            readonly 422: components["responses"]["GetErrorResponse"];
        };
    };
    readonly createPageWidgets: {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /**
                 * @description Please specify a user agent to identify your integration or client.
                 * @example PostmanRuntime/7.32.3
                 */
                readonly "User-Agent": components["parameters"]["User-Agent"];
                /** @description An identifier unique to a set of related requests. For use on headless storefronts, excluding BigCommerce for WordPress. For more information, see [Best Practices](/docs/start/best-practices#correlating-requests) or the [Headless Guide](/docs/storefront/headless#correlating-requests). */
                readonly "X-Correlation-Id"?: components["parameters"]["X-Correlation-Id"];
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                readonly "Content-Type"?: components["parameters"]["Content-Type"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody?: components["requestBodies"]["PublishOrOverwrite_Request"];
        readonly responses: {
            /** @description The request was successful. No response body is returned. */
            readonly 204: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
            readonly 422: components["responses"]["CreateErrorResponse"];
        };
    };
}
