/**
 * This file was auto-generated by openapi-typescript and ts-morph.
 * Do not make direct changes to the file.
 */

export interface paths {
    readonly "/customers": {
        readonly parameters: {
            readonly query?: never;
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Create a Customer
         * @description Create a *Customer*.
         *
         *     > #### Note
         *     > * Substitute your storefront domain for `yourstore.example.com`.
         *     > * The Send a Test Request feature is not currently supported for this endpoint.
         */
        readonly post: operations["createCustomer"];
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CustomerCreateData */
        readonly CustomerCreateData: {
            /** @description First name of customer. */
            readonly firstName?: string;
            /** @description Last name of customer. */
            readonly lastName?: string;
            /** @description Email of customer. */
            readonly email?: string;
            /** @description Password of customer. */
            readonly password?: string;
            /** @description Indicates whether customer provided consent to receive marketing emails. */
            readonly acceptsMarketingEmails?: boolean;
            /** @description A valid [reCAPTCHA](/docs/storefront/graphql/customers#recaptcha) token from a successful verification response. */
            readonly token?: string;
            readonly customFields?: readonly components["schemas"]["CustomFields"][];
        };
        /** CustomFields */
        readonly CustomFields: {
            readonly fieldId?: string;
            readonly fieldValue?: string | number | readonly string[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    readonly createCustomer: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: never;
            readonly path?: never;
            readonly cookie?: never;
        };
        /** @description Data sent the the customer endpoint when creating a customer during checkout. */
        readonly requestBody?: {
            readonly content: {
                readonly "application/json": components["schemas"]["CustomerCreateData"];
            };
        };
        readonly responses: {
            /** @description Customer successfully created. */
            readonly 204: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Could not create customer. */
            readonly 400: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
            /** @description There ºs already an account for the provided email. Please enter a different email address or sign in. */
            readonly 409: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Missing Required Fields. */
            readonly 422: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Spam Protection Failed. */
            readonly 429: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
