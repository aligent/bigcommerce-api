/**
 * This file was auto-generated by openapi-typescript and ts-morph.
 * Do not make direct changes to the file.
 */

export interface paths {
    readonly "/pickup/options": {
        readonly parameters: {
            readonly query?: never;
            readonly header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Find Available Pickup Options
         * @description Returns up to 10 available pickup options for the requested items around a radius of the provided search coordinates.
         *
         *     The pickup options returned only include options where all requested items are available and can be picked up from a single location.
         */
        readonly post: operations["post-pickup-options"];
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        readonly PickupRequestPayload: {
            readonly search_area: components["schemas"]["SearchArea"];
            /** @description Items you include in your search for pickup options. */
            readonly items: readonly components["schemas"]["Item"][];
        };
        /** @description Area where you are searching for pickup options. */
        readonly SearchArea: {
            readonly coordinates?: components["schemas"]["Coordinates"];
            /** @description Radius around the coordinates where you are searching for pickup options. */
            readonly radius: {
                /** @example 10 */
                readonly value: number;
                /** @enum {string} */
                readonly unit: "KM" | "MI";
            };
        };
        /** @description Coordinates where you are searching for pickup options. */
        readonly Coordinates: {
            /** @example 37.7749 */
            readonly latitude: number;
            /** @example 122.4194 */
            readonly longitude: number;
        };
        readonly Item: {
            /** @example 24 */
            readonly variant_id: number;
            /** @example 98 */
            readonly quantity: number;
        };
        readonly PickupOptionsResponse: {
            readonly results?: readonly {
                /** @description Pickup options for the available items. */
                readonly pickup_options?: readonly components["schemas"]["PickupOption"][];
            }[];
        };
        readonly PickupOption: {
            readonly pickup_method?: components["schemas"]["PickupMethod"];
            /** @description Items that are available using the pickup method. */
            readonly available_items?: readonly components["schemas"]["AvailableItem"][];
        };
        /** @description Pickup method that can be used with the available items. */
        readonly PickupMethod: {
            /** @example 1 */
            readonly id?: number;
            /** @example 2 */
            readonly location_id?: number;
            /** @example Office Pickup! */
            readonly display_name?: string;
            /** @example Bring your ID! */
            readonly collection_instructions?: string;
            /** @example Collect during our opening hours of 0900 - 1700 */
            readonly collection_time_description?: string;
        };
        readonly AvailableItem: {
            /** @example 55 */
            readonly variant_id?: number;
            /** @example 12 */
            readonly quantity?: number;
        };
    };
    responses: never;
    parameters: {
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
        readonly Accept: string;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
        readonly ContentType: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    readonly "post-pickup-options": {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                readonly "Content-Type"?: components["parameters"]["ContentType"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody: {
            readonly content: {
                readonly "application/json": components["schemas"]["PickupRequestPayload"];
            };
        };
        readonly responses: {
            /** @description The request has been successfully processed. */
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["PickupOptionsResponse"];
                };
            };
        };
    };
}
