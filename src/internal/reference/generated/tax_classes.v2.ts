/**
 * This file was auto-generated by openapi-typescript and ts-morph.
 * Do not make direct changes to the file.
 */

export interface paths {
    readonly "/tax_classes": {
        readonly parameters: {
            readonly query?: never;
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get All Tax Classes
         * @description Returns a list of all *Tax Classes* in a store.
         *
         *     Default sorting is by tax-class id, from lowest to highest.
         */
        readonly get: operations["getTaxClasses"];
    };
    readonly "/tax_classes/{id}": {
        readonly parameters: {
            readonly query?: never;
            readonly path?: never;
            readonly cookie?: never;
        };
        /**
         * Get a Tax Class
         * @description Returns a single *Tax Class*.
         */
        readonly get: operations["getTaxClass"];
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * taxClass_Full
         * @example {
         *       "id": "1",
         *       "name": "Shipping",
         *       "created_at": "1973-01-20T21:34:57.903+00:00",
         *       "updated_at": "1990-12-30T00:29:23.515+00:00"
         *     }
         */
        readonly taxClass_Full: {
            /**
             * @description The unique numerical ID of the tax class. A read-only value which is automatically assigned and increments sequentially.
             * @example 1
             */
            readonly id?: string;
            /**
             * @description The name of the tax class.
             * @example Shipping
             */
            readonly name?: string;
            /**
             * Format: date-time
             * @description Date and time of the tax class' creation. Read-Only.
             * @example 2018-05-07T20:14:17+00:00
             */
            readonly created_at?: string;
            /**
             * Format: date-time
             * @description Date and time when the tax class was last updated. Read-Only.
             * @example 2018-05-07T20:14:17+00:00
             */
            readonly updated_at?: string;
        };
    };
    responses: never;
    parameters: {
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
        readonly Accept: string;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
        readonly ContentType: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    readonly getTaxClasses: {
        readonly parameters: {
            readonly query?: {
                /** @description Optional filter param. Number of pages. */
                readonly page?: number;
                /** @description Optional filter param. Number of items per page */
                readonly limit?: number;
            };
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path?: never;
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": readonly components["schemas"]["taxClass_Full"][];
                };
            };
        };
    };
    readonly getTaxClass: {
        readonly parameters: {
            readonly query?: never;
            readonly header?: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                readonly Accept?: components["parameters"]["Accept"];
            };
            readonly path: {
                /** @description ID of the tax class. */
                readonly id: number;
            };
            readonly cookie?: never;
        };
        readonly requestBody?: never;
        readonly responses: {
            readonly 200: {
                headers: {
                    readonly [name: string]: unknown;
                };
                content: {
                    readonly "application/json": components["schemas"]["taxClass_Full"];
                };
            };
        };
    };
}
